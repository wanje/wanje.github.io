(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{406:function(t,s,a){t.exports=a.p+"assets/img/THREE.PointsMaterial.65e14bc1.jpg"},451:function(t,s,a){"use strict";a.r(s);var n=a(18),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h1",{attrs:{id:"第7章-粒子与精灵"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#第7章-粒子与精灵"}},[t._v("#")]),t._v(" 第7章 粒子与精灵")]),t._v(" "),n("p",[t._v("目录\n")]),n("div",{staticClass:"table-of-contents"},[n("ul",[n("li",[n("a",{attrs:{href:"#_7-1-理解粒子"}},[t._v("7.1 理解粒子")])]),n("li",[n("a",{attrs:{href:"#_7-2-three-points-和-three-pointsmaterial"}},[t._v("7.2 THREE.Points和THREE.PointsMaterial")])]),n("li",[n("a",{attrs:{href:"#_7-3-使用h5-canvas画布样式化粒子"}},[t._v("7.3 使用H5-Canvas画布样式化粒子")]),n("ul",[n("li",[n("a",{attrs:{href:"#_7-3-1-在-canvasrenderer-中使用html5画布"}},[t._v("7.3.1 在CanvasRenderer中使用HTML5画布")])]),n("li",[n("a",{attrs:{href:"#_7-3-2-在-webglrenderer-中使用html5画布"}},[t._v("7.3.2 在WebGLRenderer中使用HTML5画布")])])])]),n("li",[n("a",{attrs:{href:"#_7-4-使用纹理样式化粒子"}},[t._v("7.4 使用纹理样式化粒子")])]),n("li",[n("a",{attrs:{href:"#_7-5-使用精灵贴图"}},[t._v("7.5 使用精灵贴图")])]),n("li",[n("a",{attrs:{href:"#_7-6-从高级几何体创建-three-points"}},[t._v("7.6 从高级几何体创建THREE.Points")])])])]),n("p"),t._v(" "),n("p",[t._v("这里的粒子(points)与精灵(sprite)概念上是同一个概念(只是适用场景不一样)，可用于创建很多细小的物体(都可看做是一个点)，用来模拟雨滴、雪花、烟雾等一些效果(这里的雨滴、雪花就是一个粒子/精灵)。可能主要区别只是精灵是每个点都独立控制，一般用于数量不太多的情况，而粒子是将所有点一起控制(将所有粒子作为一个几何体的顶点，从而形成一体粒子云)，可用于数量大的情况。这些每个点的物体正面都始终面向摄像机，不管从哪个角度看，他们都会自动旋转。默认情况下每个粒子是被渲染成一个小方块的。")]),t._v(" "),n("p",[n("code",[t._v("Sprite")]),t._v("适用于少量粒子的情况，每个粒子都是一个实例进行单独管理，且每个粒子可单独设置材质；而"),n("code",[t._v("Points")]),t._v("适用于绘制大量粒子的情况，且其代表粒子云整体，所以其中的所有粒子也都是同一种材质(但可可改变每个顶点的颜色)。")]),t._v(" "),n("h2",{attrs:{id:"_7-1-理解粒子"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_7-1-理解粒子"}},[t._v("#")]),t._v(" 7.1 理解粒子")]),t._v(" "),n("p",[t._v("粒子实际就是一些细小的物体(并非一定是个点，但可以看做是一个点)，大量粒子就可以形成一个新的物体的轮廓。")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 使用`THREE.Sprite`创建一个30*20的精灵(粒子)网")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("createSprites")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" x"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("15")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("x"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("15")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("x"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" y"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("y"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("y"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" material "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("THREE"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("SpriteMaterial")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        color"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Math"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("random")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0xffffff")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 参数材质只能是`THREE.SpriteMaterial`或`THREE.SpriteCanvasMaterial`")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// `THREE.Sprite`与`THREE.Mesh`一样，都是`THREE.Object3D`对象的扩展，所以其也可以使用`THREE.Mesh`的大部分属性和函数")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" sprite "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("THREE"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Sprite")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("material"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 每个点都要创建一个`THREE.Sprite`对象，太多会出现性能问题，所以一般用于少量粒子")]),t._v("\n      sprite"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("position"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("set")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" y"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      scene"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("sprite"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 使用`THREE.Points`创建同样的一个30*20的粒子网")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("createPoints")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" geom "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("THREE"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Geometry")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 创建一个几何体对象")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" material "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("THREE"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("PointsMaterial")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 定义粒子材质")]),t._v("\n    sieze"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    vertexColors"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("THREE")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("VertexColors"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 即设为true，表示使用顶点着色")]),t._v("\n    color"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0xffffff")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" x"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("15")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("x"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("15")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("x"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 为每个粒子创建一个顶点")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" y"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("y"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("y"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" particle "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("THREE"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Vector3")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" y"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 定义粒子顶点")]),t._v("\n      geom"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("vertices"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("push")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("particle"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 将顶点放进几何体的顶点组中")]),t._v("\n      geom"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("colors"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("push")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("THREE"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Color")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Math"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("random")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0xffffff")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 设置各顶点颜色")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" pointsCloud "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("THREE"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Points")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("gemo"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" material"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 一次性创建粒子云")]),t._v("\n    scene"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("pointsCloud"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("h2",{attrs:{id:"_7-2-three-points和three-pointsmaterial"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_7-2-three-points和three-pointsmaterial"}},[t._v("#")]),t._v(" 7.2 "),n("code",[t._v("THREE.Points")]),t._v("和"),n("code",[t._v("THREE.PointsMaterial")])]),t._v(" "),n("p",[n("code",[t._v("THREE.Points")]),t._v("方法接收两个参数：几何体和材质。材质用来给粒子着色和添加纹理，而几何体则用来指定单个粒子的位置。每个用来定义几何体的顶点，都将会以粒子的形态展示出来。若我们直接使用Three.js内置的标准几何体(声明好几何体时就相当于确定好了顶点)来创建"),n("code",[t._v("THREE.Points")]),t._v("，则这些几何体的顶点将以粒子态展示(不需要手动设置顶点)，但一般都不使用内置的标准几何体创建粒子(因为图形太简单没意义)。通常都是从零开始手动将顶点添加到几何体上("),n("code",[t._v("THREE.Geometry")]),t._v(")，或者使用一个外部加载的模型。"),n("code",[t._v("THREE.Points")]),t._v("创建粒子云的示例见上面7.1节。注意，"),n("strong",[t._v("默认情况下粒子是被渲染成一个小方块的")]),t._v("，而不真是一个点。"),n("code",[t._v("THREE.Points")]),t._v("中所有粒子都应用的是同一个材质，不能单独对每个粒子应用不同的材质，但可以提供几何体的顶点颜色数组来设置每个顶点的颜色进行着色。")]),t._v(" "),n("p",[n("code",[t._v("THREE.PointsMaterial")]),t._v("用于设置粒子的材质，其包含的配置项说明如下：\n"),n("img",{attrs:{src:a(406),alt:"THREE.PointsMaterial的参数"}})]),t._v(" "),n("h2",{staticClass:"color-danger"},[t._v("============== 以下开始笔记只是简单记录，快速浏览一遍书本内容 ==============")]),t._v(" "),n("h2",{attrs:{id:"_7-3-使用h5-canvas画布样式化粒子"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_7-3-使用h5-canvas画布样式化粒子"}},[t._v("#")]),t._v(" 7.3 使用H5-Canvas画布样式化粒子")]),t._v(" "),n("p",[t._v("有三种方式使用H5-Canvas画布来样式话粒子，"),n("code",[t._v("CanvasRenderer")]),t._v("渲染器中可以通过"),n("code",[t._v("SpriteCanvasMaterial")]),t._v("引用画布，"),n("code",[t._v("WebGLRenderer")]),t._v("渲染器需要使用材质贴图纹理的方式间接使用canvas画布。")]),t._v(" "),n("h3",{attrs:{id:"_7-3-1-在canvasrenderer中使用html5画布"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_7-3-1-在canvasrenderer中使用html5画布"}},[t._v("#")]),t._v(" 7.3.1 在"),n("code",[t._v("CanvasRenderer")]),t._v("中使用HTML5画布")]),t._v(" "),n("p",[t._v("通过"),n("code",[t._v("THREE.SpriteCanvasMaterial")]),t._v("，将canvas画布的输出结果作为粒子的纹理")]),t._v(" "),n("h3",{attrs:{id:"_7-3-2-在webglrenderer中使用html5画布"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_7-3-2-在webglrenderer中使用html5画布"}},[t._v("#")]),t._v(" 7.3.2 在"),n("code",[t._v("WebGLRenderer")]),t._v("中使用HTML5画布")]),t._v(" "),n("p",[t._v("两种方法，可以使用"),n("code",[t._v("THREE.Points")]),t._v("和"),n("code",[t._v("THREE.PointsMaterial")]),t._v("的"),n("code",[t._v("map")]),t._v("属性，或者可以使用"),n("code",[t._v("THREE.Sprite")]),t._v("和"),n("code",[t._v("THREE.SpriteMaterial")]),t._v("的"),n("code",[t._v("map")]),t._v("属性。"),n("code",[t._v("map")]),t._v("可以映射一个贴图纹理"),n("code",[t._v("THREE.Texture")]),t._v("，而该贴图纹理的来源不仅可以是普通图片，也可以是canvas画布。")]),t._v(" "),n("p",[t._v("大量粒子可能会造成一些粒子重叠，有时会有错误的透明效果出现，为避免该情况出现，需要手动设置每个粒子的层级，使得后来居上，比如生成粒子时每次将"),n("code",[t._v("z")]),t._v("坐标增加一点点。")]),t._v(" "),n("h2",{attrs:{id:"_7-4-使用纹理样式化粒子"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_7-4-使用纹理样式化粒子"}},[t._v("#")]),t._v(" 7.4 使用纹理样式化粒子")]),t._v(" "),n("p",[t._v("使用图片样式化粒子时可以直接使用"),n("code",[t._v("THREE.TextureLoader().load()")]),t._v("将图像加载为"),n("code",[t._v("THREE.Texture")]),t._v("对象，然后就可以将该纹理对象分配给材质的map属性。若图片带有背景色而不是使用的透明图片，可以将材质选项中融合模式"),n("code",[t._v("blending")]),t._v("设为"),n("code",[t._v("THREE.AdditiveBlending")]),t._v("。")]),t._v(" "),n("h2",{attrs:{id:"_7-5-使用精灵贴图"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_7-5-使用精灵贴图"}},[t._v("#")]),t._v(" 7.5 使用精灵贴图")]),t._v(" "),n("p",[t._v("精灵贴图指将多个图形放在一张图片上，根据需要显示不同的部分，同CSS中背景图标和JS帧动画一样。可以通过"),n("code",[t._v("mtl.map.offset")]),t._v("和"),n("code",[t._v("mtl.map.repeat")]),t._v("两个属性设置贴图的偏移量和重复率，这些属性是按照贴图大小比例计算的，不是绝对距离，所以每个方向上的取值都是(0,1)之间。")]),t._v(" "),n("h2",{attrs:{id:"_7-6-从高级几何体创建three-points"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_7-6-从高级几何体创建three-points"}},[t._v("#")]),t._v(" 7.6 从高级几何体创建"),n("code",[t._v("THREE.Points")])]),t._v(" "),n("p",[t._v("如前面可知"),n("code",[t._v("THREE.Points")]),t._v("基于几何体的顶点来渲染每个粒子，前面我们使用顶点自定义构建出几何体，我们也可以直接使用一个已有的复杂几何体的顶点去创建出"),n("code",[t._v("THREE.Points")]),t._v("对象。")])])}),[],!1,null,null,null);s.default=e.exports}}]);
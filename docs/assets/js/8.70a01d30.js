(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{323:function(t,a,e){var s=e(0),n=e(6);s({target:"Object",stat:!0,forced:!n,sham:!n},{defineProperties:e(183)})},324:function(t,a,e){var s=e(0),n=e(1),v=e(14),r=e(22).f,_=e(6),o=n((function(){r(1)}));s({target:"Object",stat:!0,forced:!_||o,sham:!_},{getOwnPropertyDescriptor:function(t,a){return r(v(t),a)}})},325:function(t,a,e){"use strict";e.d(a,"a",(function(){return v}));e(47),e(21),e(71),e(323),e(181),e(324),e(184),e(72),e(73);function s(t,a,e){return a in t?Object.defineProperty(t,a,{value:e,enumerable:!0,configurable:!0,writable:!0}):t[a]=e,t}function n(t,a){var e=Object.keys(t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(t);a&&(s=s.filter((function(a){return Object.getOwnPropertyDescriptor(t,a).enumerable}))),e.push.apply(e,s)}return e}function v(t){for(var a=1;a<arguments.length;a++){var e=null!=arguments[a]?arguments[a]:{};a%2?n(Object(e),!0).forEach((function(a){s(t,a,e[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(e)):n(Object(e)).forEach((function(a){Object.defineProperty(t,a,Object.getOwnPropertyDescriptor(e,a))}))}return t}},341:function(t,a,e){},372:function(t,a,e){"use strict";e(341)},432:function(t,a,e){"use strict";e.r(a);var s=e(325),n={name:"component-doc",components:{"render-demo-0":Object(s.a)({render:function(){var t=this.$createElement;return(this._self._c||t)("div",[[this._m(0)]],2)},staticRenderFns:[function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("div",{staticClass:"container"},[e("div",[t._v("item1")]),t._v(" "),e("div",[t._v("item2")]),t._v(" "),e("div",[t._v("item3")]),t._v(" "),e("div",[t._v("item4")]),t._v(" "),e("div",[t._v("item5")]),t._v(" "),e("div",[t._v("item6")]),t._v(" "),e("div",[t._v("item7")])])}]},{})}},v=(e(372),e(18)),r=Object(v.a)(n,(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"第-6-章-全新的布局方式"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#第-6-章-全新的布局方式"}},[t._v("#")]),t._v(" 第 6 章 全新的布局方式")]),t._v(" "),e("h2",{attrs:{id:"多列布局"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#多列布局"}},[t._v("#")]),t._v(" 多列布局")]),t._v(" "),e("p",[t._v("多列布局最初的目的是用于解决文本排版，像一些期刊杂志、报纸内容的排版（也可很方便地实现图片的瀑布流布局）。"),e("RouterLink",{attrs:{to:"/demo_notes/pages/CSS相关/columns多列布局.html"}},[t._v("demo 示例")])],1),t._v(" "),e("h3",{attrs:{id:"columns"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#columns"}},[t._v("#")]),t._v(" columns")]),t._v(" "),e("p",[t._v("多列布局大多场景只需要用到"),e("code",[t._v("columns")]),t._v("属性即可，有时也会用到"),e("code",[t._v("columns-gap")]),t._v("设置列间间隔距离。")]),t._v(" "),e("p",[e("code",[t._v("columns")]),t._v("属性是"),e("code",[t._v("columns-count")]),t._v("和"),e("code",[t._v("columns-width")]),t._v("属性的缩写，且值的顺序无关，会自动根据值的类型匹配属于哪个属性。"),e("code",[t._v("columns: <count> <width>;")]),t._v("或"),e("code",[t._v("columns: <width> <count>;")]),t._v("均可，且两个值都是可以选的，默认都为"),e("code",[t._v("auto")]),t._v("。")]),t._v(" "),e("p",[e("code",[t._v("columns-count")]),t._v("表示想要分成的“理想”的"),e("strong",[t._v("列数")]),t._v("，值为正整数或"),e("code",[t._v("auto")]),t._v("(默认值)。")]),t._v(" "),e("p",[e("code",[t._v("columns-width")]),t._v("表示每列的“最佳”"),e("strong",[t._v("宽度")]),t._v("，值为表示尺寸的长度值("),e("strong",[t._v("不支持百分比值")]),t._v(")或"),e("code",[t._v("auto")]),t._v("(默认值)。")]),t._v(" "),e("p",[t._v("上面说的“理想”和“最佳”的意思就是浏览器只是尽量往设定的值靠拢，而并不一定就刚好是这个值，最终实际多少列是由"),e("code",[t._v("columns-count")]),t._v("和"),e("code",[t._v("columns-width")]),t._v("这两个属性共同决定的，并没有哪个属性的优先级一定更高，"),e("strong",[t._v("最终实际列数是按照最小原则决定的")]),t._v("，即看"),e("code",[t._v("columns-count")]),t._v("设定的列数与将整行按"),e("code",[t._v("columns-width")]),t._v("宽度可分割出的列数哪个值更小就是哪个。")]),t._v(" "),e("p",[t._v("多列布局的每一列的高度并不总是相等的，内容的分隔也不总是均匀的，浏览器有自己的一套算法。")]),t._v(" "),e("h3",{attrs:{id:"columns-gap-gap"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#columns-gap-gap"}},[t._v("#")]),t._v(" columns-gap/gap")]),t._v(" "),e("p",[e("code",[t._v("columns-gap")]),t._v("表示每一列之间的空白间隙大小，可以是长度值，也可以是百分比值(相对整行)。")]),t._v(" "),e("p",[t._v("也可直接使用"),e("code",[t._v("gap")]),t._v("属性替代(作用一样)："),e("code",[t._v("gap")]),t._v("属性实际是"),e("code",[t._v("columns-gap")]),t._v("属性和"),e("code",[t._v("row-gap")]),t._v("属性的缩写，是统一多列布局、Flex 弹性布局和 Grid 网格布局的间隙设置的属性。")]),t._v(" "),e("h3",{attrs:{id:"columns-rule"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#columns-rule"}},[t._v("#")]),t._v(" columns-rule")]),t._v(" "),e("p",[e("code",[t._v("columns-rule")]),t._v("用于设置每列之间的分割线样式，语法同"),e("code",[t._v("border")]),t._v("和"),e("code",[t._v("outline")]),t._v("，且不占据空间，其也是"),e("code",[t._v("columns-rule-style")]),t._v("/"),e("code",[t._v("columns-rule-width")]),t._v("/"),e("code",[t._v("columns-rule-color")]),t._v("三个属性的简写。")]),t._v(" "),e("h3",{attrs:{id:"columns-span"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#columns-span"}},[t._v("#")]),t._v(" columns-span")]),t._v(" "),e("p",[e("code",[t._v("columns-span")]),t._v("类似 table 表格中的"),e("code",[t._v("solspan")]),t._v("列合并(html 属性，非 css 属性，表格另有"),e("code",[t._v("rowspan")]),t._v("行合并，但这里没有)，该属性设置在多列布局的子元素上，表格该内容是否跨多列展示。")]),t._v(" "),e("p",[t._v("其只有两个值：")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("none")]),t._v("，表示不跨列展示，默认值")]),t._v(" "),e("li",[e("code",[t._v("all")]),t._v("，表示跨列展示，且是跨所有列，即占用整行")])]),t._v(" "),e("h3",{attrs:{id:"columns-fill"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#columns-fill"}},[t._v("#")]),t._v(" columns-fill")]),t._v(" "),e("p",[e("code",[t._v("columns-fill")]),t._v("用于设置如何去分配内容填充在每一列中（一般容器有设置高度才容易看出各值的差异），默认"),e("code",[t._v("balance")]),t._v("，有如下几个值：")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("balance")]),t._v("，表示尽可能平衡各列的内容量，使每列的内容量差不多")]),t._v(" "),e("li",[e("code",[t._v("auto")]),t._v("，表示按顺序填充每一列，前一列内容满了再换到第二列，以此类推")]),t._v(" "),e("li",[e("code",[t._v("balance-all")]),t._v("，表示尽可能平衡各列的内容量，使每列的内容量差不多，即使是分隔断开的上下文，"),e("strong",[t._v("目前无浏览器支持")]),t._v("无法查看效果。")])]),t._v(" "),e("h3",{attrs:{id:"两端对齐和元素断点位置控制"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#两端对齐和元素断点位置控制"}},[t._v("#")]),t._v(" 两端对齐和元素断点位置控制")]),t._v(" "),e("p",[t._v("多列布局的首尾列会自动两端对齐，再设置各列间隙"),e("code",[t._v("gap")]),t._v("即可，唯一缺点是只适合实现单行内容的两端对齐效果（这里单行只是的从容器整体来看，不存在行数分割）。")]),t._v(" "),e("p",[e("code",[t._v("break-inside")]),t._v("属性(并非多列布局专用)可定义页面打印、多列布局中内容发生中断(即本该是放在同一块中的内容被分割在了多个列中，比如同一个段落的内容可能第一列还有空间填充了一部分，剩余的又在第二列)时元素的表现形式。该属性有几个可选值："),e("code",[t._v("auto")]),t._v("、"),e("code",[t._v("avoid")]),t._v("、"),e("code",[t._v("avoid-page")]),t._v("、"),e("code",[t._v("avoid-column")]),t._v("等。")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("auto")]),t._v("，表示元素可以中断")]),t._v(" "),e("li",[e("code",[t._v("avoid")]),t._v("，表示元素不能中断，若我们希望每个列元素都是独立的，不能被拆分到多个列中，可以设置该值")])]),t._v(" "),e("p",[t._v("默认情况下，元素片段在跨行/列/页(如打印)时的样式是分隔渲染的，如边框或者圆角都是分割开的(就像直接切开的)，若希望即使元素内容因为分列断开，其一些像边框/阴影等属性能完整渲染而不是被分割，则可以使用"),e("code",[t._v("box-decoration-break")]),t._v("属性实现，其有两个值：")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("slice")]),t._v("，即断开，如同被切开一样，为默认值")]),t._v(" "),e("li",[e("code",[t._v("clone")]),t._v("，表示断开位置的各元素样式独自渲染，就像被复制了一份，而不是直接切开")])]),t._v(" "),e("p",[e("code",[t._v("box-decoration-break")]),t._v("属性并非对所有样式都有效，其只能影响部分 CSS 属性的渲染，有效的包含："),e("code",[t._v("background、border")]),t._v("、"),e("code",[t._v("border-image")]),t._v("、"),e("code",[t._v("border-radius")]),t._v("、"),e("code",[t._v("box-shadow")]),t._v("、"),e("code",[t._v("margin")]),t._v("、"),e("code",[t._v("padding")]),t._v("、"),e("code",[t._v("clip-path")]),t._v("。但是该属性目前在 Chrome 和 Safari 下只是部分支持，对多列和分页场景暂不支持，而像普通内联元素换行的情况是支持的。")]),t._v(" "),e("h2",{attrs:{id:"flex-弹性布局"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#flex-弹性布局"}},[t._v("#")]),t._v(" Flex 弹性布局")]),t._v(" "),e("p",[e("RouterLink",{attrs:{to:"/demo_notes/pages/CSS相关/flex弹性布局.html"}},[t._v("demo 及属性示例")])],1),t._v(" "),e("p",[e("code",[t._v("flex: none | auto | [ <flex-grow> <flex-shrink>? || <flex-basis> ]")]),t._v("；"),e("code",[t._v("flex-grow")]),t._v("表示有多余空间时对多余空间的分配比例，默认值"),e("code",[t._v("0")]),t._v("；"),e("code",[t._v("flex-shrink")]),t._v("表示空间不够时需要压缩的空间分配比例，默认值"),e("code",[t._v("1")]),t._v("；\n"),e("code",[t._v("flex-basis")]),t._v("表示元素的基本固定宽度，默认值"),e("code",[t._v("auto")]),t._v("(但 Chrome 较新版本中默认是"),e("code",[t._v("0")]),t._v(")，必须是一个表示尺寸的值。")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("flex: none")]),t._v("，此时同"),e("code",[t._v("flex: 0 0 auto")]),t._v("，即"),e("code",[t._v("flex-grow: 0")]),t._v("、"),e("code",[t._v("flex-shrink: 0")]),t._v("、"),e("code",[t._v("flex-basis: auto")]),t._v("；")]),t._v(" "),e("li",[e("code",[t._v("flex: auto")]),t._v("，此时同"),e("code",[t._v("flex: 1 1 auto")]),t._v("，即"),e("code",[t._v("flex-grow: 1")]),t._v("、"),e("code",[t._v("flex-shrink: 1")]),t._v("、"),e("code",[t._v("flex-basis: auto")]),t._v("；")]),t._v(" "),e("li",[e("code",[t._v("flex: 2")]),t._v("，只有一个"),e("code",[t._v("数值")]),t._v("时，该值表示"),e("code",[t._v("flex-grow")]),t._v("，其余两个值使用默认值，也即等同于"),e("code",[t._v("flex: 2 1 auto")]),t._v("，但 Chrome 较新版本中等同于"),e("code",[t._v("flex: 2 1 0")]),t._v("；")]),t._v(" "),e("li",[e("code",[t._v("flex: 100px")]),t._v("，只有一个"),e("code",[t._v("尺寸值")]),t._v("时，该值表示"),e("code",[t._v("flex-basis")]),t._v("，其余两个值使用默认值，也即等同于"),e("code",[t._v("flex: 0 1 100px")]),t._v("，但 Chrome 较新版本中等同于"),e("code",[t._v("flex: 1 1 100px")]),t._v("；")]),t._v(" "),e("li",[e("code",[t._v("flex: 2 2")]),t._v("，两个"),e("code",[t._v("数值")]),t._v("时，该值表示"),e("code",[t._v("flex-grow flex-shrink")]),t._v("，而"),e("code",[t._v("flex-basis")]),t._v("使用默认值"),e("code",[t._v("auto")]),t._v("，也即等同于"),e("code",[t._v("flex: 2 2 auto")]),t._v("，但 Chrome 较新版本中等同于"),e("code",[t._v("flex: 2 2 0")]),t._v("；")]),t._v(" "),e("li",[e("code",[t._v("flex: 2 100px")]),t._v("，两个值且第二个为"),e("code",[t._v("尺寸值")]),t._v("时，该值表示"),e("code",[t._v("flex-grow flex-basis")]),t._v("，而"),e("code",[t._v("flex-shrink")]),t._v("使用默认值"),e("code",[t._v("1")]),t._v("，也即等同于"),e("code",[t._v("flex: 2 1 100px")]),t._v("；")]),t._v(" "),e("li",[e("code",[t._v("flex: 1 2 100px")]),t._v("，三个值时，该值就表示"),e("code",[t._v("flex-grow flex-shrink flex-basis")]),t._v("。")])]),t._v(" "),e("h2",{attrs:{id:"grid-网格布局"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#grid-网格布局"}},[t._v("#")]),t._v(" Grid 网格布局")]),t._v(" "),e("p",[e("a",{attrs:{href:"https://www.zhangxinxu.com/wordpress/2018/11/display-grid-css-css3/",target:"_blank",rel:"noopener noreferrer"}},[t._v("参考文章"),e("OutboundLink")],1)]),t._v(" "),e("p",[e("code",[t._v("display: grid;")]),t._v("为块级网格，"),e("code",[t._v("display: inline-grid;")]),t._v("为行内块网格，若不设置其他属性则看不出他们内部子元素的排列特殊性，默认就是与"),e("code",[t._v("display: block;")]),t._v("一样的瀑布式自上而下布局 。")]),t._v(" "),e("h3",{attrs:{id:"grid-template-columns-和-grid-template-rows"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#grid-template-columns-和-grid-template-rows"}},[t._v("#")]),t._v(" grid-template-columns 和 grid-template-rows")]),t._v(" "),e("p",[t._v("这两个属性用于指定网格的行列数量和尺寸等信息，以下介绍"),e("code",[t._v("grid-template-columns")]),t._v("属性的相关特性和值对"),e("code",[t._v("grid-template-rows")]),t._v("都适用。网格尺寸中有个特殊的单位 "),e("b",{staticClass:"color-primary"},[t._v("fr")]),t._v("，其为网格剩余空间的分配比例单位，有点类似 flex 布局中"),e("code",[t._v("flex-grow")]),t._v("属性值的效果（对剩余或多余空间的分配比例）。")]),t._v(" "),e("div",{staticClass:"language-css extra-class"},[e("pre",{pre:!0,attrs:{class:"language-css"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 这里每个数值就表示对应列的宽度，而值的个数就表示列数多少，这里有3个值就表示3列，并非直接指定一个数字来表示几列 */")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token property"}},[t._v("grid-template-columns")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 200px auto 20%"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token property"}},[t._v("grid-template-rows")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 5vw 80px auto 20%"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 该属性对应行的设置，与列类似 */")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 简写属性 grid-template */")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token property"}},[t._v("grid-template")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" rows / columns"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 该属性还包含 grid-template-areas 属性，是这3个属性的缩写 */")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 更简写属性 grid，该属性是包含更多其他属性的缩写 */")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token property"}},[t._v("grid")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" rows / columns"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),e("demo-block",{attrs:{options:JSON.parse(decodeURI("%7B%7D"))}},[e("template",{slot:"demo"},[[e("render-demo-0")]],2),t._v(" "),e("template",{slot:"source"},[e("div",{staticClass:"language-html extra-class"},[e("pre",{pre:!0,attrs:{class:"language-html"}},[e("code",[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("template")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("div")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("class")]),e("span",{pre:!0,attrs:{class:"token attr-value"}},[e("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("container"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("div")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("item1"),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("div")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("div")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("item2"),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("div")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("div")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("item3"),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("div")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("div")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("item4"),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("div")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("div")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("item5"),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("div")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("div")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("item6"),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("div")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("div")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("item7"),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("div")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("div")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("template")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("style")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),e("span",{pre:!0,attrs:{class:"token style"}},[e("span",{pre:!0,attrs:{class:"token language-css"}},[t._v("\n  "),e("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".container")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v("display")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" grid"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v("grid-template")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 5vw 80px auto 20% / 200px auto 20%"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v("gap")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 10px"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".container div")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v("padding")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 10px"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v("background")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("var")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("--e-color-primary"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("style")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])])])],2),e("h4",{attrs:{id:"网格线命名"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#网格线命名"}},[t._v("#")]),t._v(" 网格线命名")]),t._v(" "),e("p",[t._v("可以给网格线命名，注意是网格线，不是网格的行或列，以"),e("code",[t._v("grid-template-columns")]),t._v("列为例，语法如下：")]),t._v(" "),e("div",{staticClass:"language-css extra-class"},[e("pre",{pre:!0,attrs:{class:"language-css"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 这里网格线名使用中括号[]并非可选的意思，而是值需要使用中括号[]包裹，不过确实线条命名也是可省略的，不需要的区域可以省略 */")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 由于网格中间区域的线是两边格子公用的，所以起名字时也可以起两个以分开使用，但需要放在同一个[]中用空格隔开（一个值即相当于两个同名） */")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token property"}},[t._v("grid-template-columns")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" [线名-开始] 尺寸1 [线名2] 尺寸2 [线名3-左 线名3-右] 尺寸3 [线名-结束]"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),e("p",[t._v("网格线命名主要用于"),e("code",[t._v("grid-column-start")]),t._v("、"),e("code",[t._v("grid-column-end")]),t._v("、"),e("code",[t._v("grid-row-start")]),t._v("、"),e("code",[t._v("grid-row-end")]),t._v("等属性，该功能作用在 grid 子元素上，方便描述 grid 子元素占据的网格区域，一般在语义明确的页面级布局才可能用到，而其他情况几乎用不到。")]),t._v(" "),e("h4",{attrs:{id:"网格尺寸"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#网格尺寸"}},[t._v("#")]),t._v(" 网格尺寸")]),t._v(" "),e("p",[t._v("grid-template-columns属性支持的其他值全都属于 track-size 数据类型，共支持 9 种数据类型，分别如下:")]),t._v(" "),e("ul",[e("li",[t._v("长度值；")]),t._v(" "),e("li",[t._v("百分比值；")]),t._v(" "),e("li",[t._v("关键字属性值，包括"),e("code",[t._v("min-content")]),t._v("、"),e("code",[t._v("max-content")]),t._v("和"),e("code",[t._v("auto")]),t._v("；")]),t._v(" "),e("li",[t._v("flex 数据类型，也就是以"),e("code",[t._v("fr")]),t._v("为单位的值；")]),t._v(" "),e("li",[t._v("函数值，包括"),e("code",[t._v("repeat()")]),t._v("、"),e("code",[t._v("minmax()")]),t._v("和"),e("code",[t._v("fit-content()")]),t._v("）。\n"),e("ul",[e("li",[t._v("注意，"),e("code",[t._v("minmax()")]),t._v("和"),e("code",[t._v("fit-content()")]),t._v("是尺寸类结果值，而"),e("code",[t._v("repeat()")]),t._v("不是，字面意思就可看出它更像语法简写，故 "),e("code",[t._v("repeat()")]),t._v("中可以包含"),e("code",[t._v("minmax()")]),t._v("和"),e("code",[t._v("fit-content()")]),t._v("，但反过来是不行的")]),t._v(" "),e("li",[t._v("另外"),e("code",[t._v("repeat()")]),t._v("函数不能再与上面的"),e("code",[t._v("auto")]),t._v("关键字一起出现")])])])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",{staticStyle:{"text-align":"center"}},[t._v("属性值")]),t._v(" "),e("th",{staticStyle:{"text-align":"left"}},[t._v("宽度计算方式")]),t._v(" "),e("th",{staticStyle:{"text-align":"left"}},[t._v("典型场景")])])]),t._v(" "),e("tbody",[e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("min-content")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("内容中最长不可分割部分的宽度（最紧凑）")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("希望元素尽可能窄，比如表格列宽调整")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("max-content")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("内容不换行的完整宽度（最宽松）")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("希望元素完全展开，比如自适应内容宽度")])])])]),t._v(" "),e("p",[t._v('直观例子：假设元素内容是文本 "Hello World"：')]),t._v(" "),e("ul",[e("li",[e("code",[t._v("min-content")]),t._v('：宽度是 "World" 的宽度（最长的不可分割单词）。')]),t._v(" "),e("li",[e("code",[t._v("max-content")]),t._v('：宽度是 "Hello World" 整体的宽度（不换行）。')])]),t._v(" "),e("h3",{attrs:{id:"fr-单位"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#fr-单位"}},[t._v("#")]),t._v(" fr 单位")]),t._v(" "),e("p",[e("code",[t._v("fr")]),t._v("是单词 fraction 的缩写，分数的意思，在网格布局中表示一个单元格所占的可用尺寸比例（注意是抛开固定长度值(若有)外剩余的可自由分配空间的比例）。该单位值的技术规则如下：")]),t._v(" "),e("ul",[e("li",[t._v("如果所有"),e("code",[t._v("fr")]),t._v("值之"),e("strong",[t._v("和大于1")]),t._v("，则按"),e("code",[t._v("fr")]),t._v("值的"),e("strong",[t._v("比例划分")]),t._v("可自动分配尺寸。")]),t._v(" "),e("li",[t._v("如果所有"),e("code",[t._v("fr")]),t._v("值之"),e("strong",[t._v("和小于1")]),t._v("，最终的尺寸是可自动分配尺寸和"),e("code",[t._v("fr")]),t._v("值的"),e("strong",[t._v("乘法计算值")]),t._v("（content_size * fr_value），意味着可能有部分剩余空间未分配。")])]),t._v(" "),e("div",{staticClass:"language-css extra-class"},[e("pre",{pre:!0,attrs:{class:"language-css"}},[e("code",[e("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".container")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* fr值的和是3，大于1，则剩余空间（100% - 100px）按比例划分，比例是1:1:1 */")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v("grid-template-columns")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 100px 1fr 1fr 1fr"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* fr值的比例还是1:1:1，但是由于fr值的和是0.6，小于1，则网格的宽度是容器剩余尺寸（100% - 100px）和 0.2 的乘法计算值，剩余空间会有 40% 的尺寸是没有网格元素的 */")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v("grid-template-columns")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 100px 0.2fr 0.2fr 0.2fr"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("h3",{attrs:{id:"minmax"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#minmax"}},[t._v("#")]),t._v(" minmax()")]),t._v(" "),e("p",[t._v("语法："),e("code",[t._v("minmax(min, max)")]),t._v("，表示尺寸范围限制在 min ~ max 之间，其中参数的取值类型有：")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("min")]),t._v("："),e("code",[t._v("<length>|<percentage>|min-content|max-content|auto")])]),t._v(" "),e("li",[e("code",[t._v("max")]),t._v("："),e("code",[t._v("<length>|<percentage>|min-content|max-content|auto|<flex>")])])]),t._v(" "),e("p",[t._v("注意"),e("code",[t._v("max")]),t._v("的可取值要多一个"),e("code",[t._v("<flex>")]),t._v("类型（如以"),e("code",[t._v("fr")]),t._v("为单位的值）。")]),t._v(" "),e("h3",{attrs:{id:"fit-content"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#fit-content"}},[t._v("#")]),t._v(" fit-content()")]),t._v(" "),e("p",[t._v("语法："),e("code",[t._v("fit-content([<length>|<percentage>])")]),t._v("（注意不可使用"),e("code",[t._v("fr")]),t._v("单位），作用是让尺寸适应于内容大小，但不超过设定的尺寸。其底层计算公式为：")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("fit-content(limit) = max(minimum, min(limit, max-content))")])])]),t._v(" "),e("p",[t._v("其中"),e("code",[t._v("limit")]),t._v("是设定的最大尺寸，而"),e("code",[t._v("minimum")]),t._v("是网格的最小尺寸（即"),e("code",[t._v("min-content")]),t._v("，不考虑"),e("code",[t._v("min-width/min-height")]),t._v("的情况），不精确公式可替换为：")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("fit-content(limit) = max(min-content, min(limit, max-content))")])])]),t._v(" "),e("p",[t._v("表示最终的尺寸大于"),e("code",[t._v("min-content")]),t._v("，小于设定尺寸(即"),e("code",[t._v("limit")]),t._v(")和"),e("code",[t._v("max-content")]),t._v("的较小值。换句话说，"),e("code",[t._v("fit-content()")]),t._v("函数实现的效果是：尺寸由内容决定，内容越多尺寸越大，但不超过限定的尺寸。")]),t._v(" "),e("h3",{attrs:{id:"repeat"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#repeat"}},[t._v("#")]),t._v(" repeat()")]),t._v(" "),e("p",[t._v("语法："),e("code",[t._v("repeat(count, track-size)")]),t._v("，表示重复 track-size 单元 count 次，track-size 可以是上面 track-size 数据类型中出repeat自身外的任意多个值（空格隔开），可以有效减少规律重复网格尺寸的设置复杂度。该函数只能用在"),e("code",[t._v("grid-template-columns")]),t._v("和"),e("code",[t._v("grid-template-rows")]),t._v("属性中。")]),t._v(" "),e("div",{staticClass:"language-css extra-class"},[e("pre",{pre:!0,attrs:{class:"language-css"}},[e("code",[e("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".container")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 表示重复 <40px auto 60px> 这个单元 4 次 */")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v("grid-template-columns")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("repeat")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("4"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" 40px auto 60px"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 等价于 */")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* grid-template-columns: 40px auto 60px 40px auto 60px 40px auto 60px 40px auto 60px; */")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("p",[t._v("完整语法为："),e("code",[t._v("repeat([<positive-integer> | auto-fill | auto-fit ] , <track-list>)")]),t._v("，主要解释第一个参数的3种取值：")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("<positive-integer>")]),t._v("：整数，表示重复的次数，如上例；")]),t._v(" "),e("li",[e("code",[t._v("auto-fill")]),t._v("关键字：表示自动填充列数，为容器能放下的最大列数，其代表的个数不确定，根据容器和子项的尺寸动态计算；\n"),e("ul",[e("li",[t._v("使用此值时我们一般不会将重复单元的尺寸设为固定尺寸，因为那样可能导致右侧留出不确定的空白区域，故通常将其与其他网格布局函数一起使用，使得弹性尺寸可以填充满容器，不留白，例如与"),e("code",[t._v("minmax()")]),t._v("函数一起使用（但其只拉伸填充只会在多余空间放不下一列时才会分配填充，若容器足够大还能放下子元素只是子元素个数不够了的情况是不会拉伸填充的）；")]),t._v(" "),e("li",[e("code",[t._v("repeat(auto-fill, minmax(100px, 1fr))")]),t._v("这就实现了无论grid容器多宽，grid子项都会等比例充满 grid 容器(因为设置了 1fr)，同时保证宽度不小于 100px，网格布局的列数自动计算分配的智能弹性布局效果。")])])]),t._v(" "),e("li",[e("code",[t._v("auto-fit")]),t._v("关键字：与"),e("code",[t._v("auto-fill")]),t._v("类似，但不同的是当网格容器宽度足够大时，"),e("code",[t._v("auto-fit")]),t._v("会将所有子项都填充满，不留空白区域，也就是该关键字始终会将多余的空间利用完，不管多余的空间是否还能放下一个单元格；")])]),t._v(" "),e("h3",{attrs:{id:"grid-template-areas"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#grid-template-areas"}},[t._v("#")]),t._v(" grid-template-areas")])],1)}),[],!1,null,null,null);a.default=r.exports}}]);
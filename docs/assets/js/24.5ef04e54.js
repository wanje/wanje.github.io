(window.webpackJsonp=window.webpackJsonp||[]).push([[24],{448:function(t,a,s){"use strict";s.r(a);var n=s(18),e=Object(n.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"第10章-加载和使用纹理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#第10章-加载和使用纹理"}},[t._v("#")]),t._v(" 第10章 加载和使用纹理")]),t._v(" "),s("p",[t._v("目录\n")]),s("div",{staticClass:"table-of-contents"},[s("ul",[s("li",[s("a",{attrs:{href:"#_10-1-将纹理应用于材质"}},[t._v("10.1 将纹理应用于材质")]),s("ul",[s("li",[s("a",{attrs:{href:"#_10-1-1-加载纹理并应用到网格"}},[t._v("10.1.1 加载纹理并应用到网格")])]),s("li",[s("a",{attrs:{href:"#_10-1-2-使用凹凸贴图创建褶皱"}},[t._v("10.1.2 使用凹凸贴图创建褶皱")])]),s("li",[s("a",{attrs:{href:"#_10-1-3-使用法向贴图创建更加细致的凹凸和褶皱"}},[t._v("10.1.3 使用法向贴图创建更加细致的凹凸和褶皱")])]),s("li",[s("a",{attrs:{href:"#_10-1-4-使用移位贴图来改变顶点位置"}},[t._v("10.1.4 使用移位贴图来改变顶点位置")])]),s("li",[s("a",{attrs:{href:"#_10-1-5-用环境光遮挡贴图实现细节阴影"}},[t._v("10.1.5 用环境光遮挡贴图实现细节阴影")])]),s("li",[s("a",{attrs:{href:"#_10-1-6-用光照贴图产生假阴影"}},[t._v("10.1.6 用光照贴图产生假阴影")])]),s("li",[s("a",{attrs:{href:"#_10-1-7-金属光泽度贴图和粗糙度贴图"}},[t._v("10.1.7 金属光泽度贴图和粗糙度贴图")])]),s("li",[s("a",{attrs:{href:"#_10-1-8-alpha贴图"}},[t._v("10.1.8 Alpha贴图")])]),s("li",[s("a",{attrs:{href:"#_10-1-9-自发光贴图"}},[t._v("10.1.9 自发光贴图")])]),s("li",[s("a",{attrs:{href:"#_10-1-10-高光贴图"}},[t._v("10.1.10 高光贴图")])]),s("li",[s("a",{attrs:{href:"#_10-1-11-使用环境贴图创建伪镜面反射效果"}},[t._v("10.1.11 使用环境贴图创建伪镜面反射效果")])])])]),s("li",[s("a",{attrs:{href:"#_10-2-纹理的高级用途"}},[t._v("10.2 纹理的高级用途")]),s("ul",[s("li",[s("a",{attrs:{href:"#_10-2-1-自定义uv映射"}},[t._v("10.2.1 自定义UV映射")])]),s("li",[s("a",{attrs:{href:"#_10-2-2-重复纹理"}},[t._v("10.2.2 重复纹理")])]),s("li",[s("a",{attrs:{href:"#_10-2-3-在画布上绘制图案并作为纹理"}},[t._v("10.2.3 在画布上绘制图案并作为纹理")])]),s("li",[s("a",{attrs:{href:"#_10-2-4-将视频输出作为纹理"}},[t._v("10.2.4 将视频输出作为纹理")])])])])])]),s("p"),t._v(" "),s("h2",{attrs:{id:"_10-1-将纹理应用于材质"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_10-1-将纹理应用于材质"}},[t._v("#")]),t._v(" 10.1 将纹理应用于材质")]),t._v(" "),s("p",[t._v("可以使用纹理实现很多效果，比如定义网格颜色、定义高光、凹凸和反光等。")]),t._v(" "),s("h3",{attrs:{id:"_10-1-1-加载纹理并应用到网格"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_10-1-1-加载纹理并应用到网格"}},[t._v("#")]),t._v(" 10.1.1 加载纹理并应用到网格")]),t._v(" "),s("p",[t._v("纹理最基础的用法就是作为贴图被添加在材质上，其表现的是材质样式。")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 加载纹理图")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" textureLoader "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("THREE"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("TextureLoader")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" img "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" textureLoader"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("load")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./path/to/img.png'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" onLoad"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" onProgress"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" onError"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 后三个可选参数为对应时刻的回调函数")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 使用贴图")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" mtl "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("THREE"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("MeshStandarMaterial")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  map"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" img  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 通过map属性指定该材质的贴图")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[t._v("可以设置"),s("code",[t._v("magFilter")]),t._v("属性来指定纹理如何放大，设置"),s("code",[t._v("minFilter")]),t._v("属性来指定纹理如何缩小。")]),t._v(" "),s("p",[t._v("除了可用"),s("code",[t._v("THREE.TextureLoader")]),t._v("加载器加载标准格式的图片外，Three.js还提供了一些自定义的加载器以用于加载其他格式的一些纹理文件，如dds、pvr、tga、ktx、exr、hdr等，就像各种模型加载器一样。")]),t._v(" "),s("h3",{attrs:{id:"_10-1-2-使用凹凸贴图创建褶皱"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_10-1-2-使用凹凸贴图创建褶皱"}},[t._v("#")]),t._v(" 10.1.2 使用凹凸贴图创建褶皱")]),t._v(" "),s("p",[t._v("凹凸贴图可表现出材质的厚度感，所用贴图中各位置像素的密集程度定义的就是凹凸的高度(相对高度，不包含方向信息)，可以使用灰度图。")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 通过`bumpMap`属性映射凹凸贴图")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" mtl "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("THREE"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("MeshStandarMaterial")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  map"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" img"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 表现样式")]),t._v("\n  bumpMap"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" textureLoader"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("load")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./path/to/img.png'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 表现凹凸厚度感")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[t._v("可通过"),s("code",[t._v("bumpScale")]),t._v("属性可设置凹凸的高度，为负数时则表示深度。")]),t._v(" "),s("h3",{attrs:{id:"_10-1-3-使用法向贴图创建更加细致的凹凸和褶皱"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_10-1-3-使用法向贴图创建更加细致的凹凸和褶皱"}},[t._v("#")]),t._v(" 10.1.3 使用法向贴图创建更加细致的凹凸和褶皱")]),t._v(" "),s("p",[t._v("法向贴图保存的不是高度信息，而是法向量的方向，可使得材质对光源的反应更自然真实。")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 通过`normalMap`属性映射法线贴图")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" mtl "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("THREE"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("MeshStandarMaterial")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  map"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" img"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 表现样式")]),t._v("\n  normalMap"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" textureLoader"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("load")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./path/to/img.png'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nmtl"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("normalScale"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("set")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" y"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 可通过材质的normalScale属性指定x/y方向的缩放量，从而设定凹凸的程度，若值为负数，则高度就会反转。")]),t._v("\n")])])]),s("p",[t._v("使用法向贴图和凹凸贴图来增加物体表面细节时，不需要改变模型的实际形状，所有顶点都保持在原始位置不变，这些贴图利用场景中的光照来制造伪深度和细节。")]),t._v(" "),s("h3",{attrs:{id:"_10-1-4-使用移位贴图来改变顶点位置"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_10-1-4-使用移位贴图来改变顶点位置"}},[t._v("#")]),t._v(" 10.1.4 使用移位贴图来改变顶点位置")]),t._v(" "),s("p",[t._v("法向贴图和凹凸贴图都只能在物体表面生成一种凹凸不平的假象，而移位贴图则能够根据贴图的内容，真正改变模型的形状。图片中越亮的颜色会使顶点移位越远。")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 通过`displacementMap`属性映射移位贴图")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" mtl "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("THREE"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("MeshStandarMaterial")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  map"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" img"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 表现样式")]),t._v("\n  displacementMap"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" textureLoader"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("load")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./path/to/img.png'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("还可以通过"),s("code",[t._v("displacementScale")]),t._v("和"),s("code",[t._v("displacementOffset")]),t._v("两个属性来控制顶点的移位程度。使用移位贴图时需要特别注意：模型必须具有大量顶点，否则其顶点移位效果看起来会与移位贴图并不相像，这是因为顶点过少的模型没有足够的顶点可以移动。")]),t._v(" "),s("h3",{attrs:{id:"_10-1-5-用环境光遮挡贴图实现细节阴影"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_10-1-5-用环境光遮挡贴图实现细节阴影"}},[t._v("#")]),t._v(" 10.1.5 用环境光遮挡贴图实现细节阴影")]),t._v(" "),s("p",[t._v("环境光遮挡技术用于决定模型的哪一部分暴露于环境光之中，虽然在环境光下物体的大部分表面都能接收到光，但每个部位接收的光线的多少仍然是有差别的。比如一个站立的人物模型，其头顶一般接收的光线更多，而胳膊内侧则相对更少，这种光照的差异可以被渲染(又称烘焙)到一张纹理贴图上，然后与颜色贴图混合一起应用到模型上。这样一来对于这些相对固定的光照差异使用贴图就可以避免在循环渲染中重复计算光照差异。")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 通过`aoMap`属性映射环境光遮挡贴图，`aoMapIntensity`属性可指定环境光遮挡贴图的影响程度")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" mtl "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("THREE"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("MeshStandarMaterial")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  map"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" img"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  aoMap"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" textureLoader"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("load")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./path/to/img.png'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  aoMapIntensity"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("在使用环境光遮挡贴图"),s("code",[t._v("aoMap")]),t._v("属性或者光照贴图"),s("code",[t._v("lightMap")]),t._v("属性时，对于光照贴图来说，需要使用"),s("code",[t._v("faceVertexUvs[1]")]),t._v("来进行UV贴图来进行纹理采样。")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("geom"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("faceVertexUvs"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("push")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("geom"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("faceVertexUvs"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("环境光遮挡贴图的作用是指出模型上哪些部分处于阴影中，应该从环境光中接受较少的光照。与环境光遮挡贴图作用相反的是光照贴图，该贴图用来决定模型的那些部分需要补充更多光照。")]),t._v(" "),s("h3",{attrs:{id:"_10-1-6-用光照贴图产生假阴影"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_10-1-6-用光照贴图产生假阴影"}},[t._v("#")]),t._v(" 10.1.6 用光照贴图产生假阴影")]),t._v(" "),s("p",[t._v("光照贴图里面的信息用于指出一个模型的特定部分应该从场景中接收多少光照，也就是模型的光照信息被预先烘焙到了纹理贴图中。")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 通过`lightMap`属性映射光照贴图")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" mtl "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("THREE"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("MeshStandarMaterial")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  map"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" img"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  lightMap"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" textureLoader"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("load")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./path/to/img.png'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[s("span",{staticClass:"color-warning"},[t._v("注意：")]),t._v("烘焙到纹理贴图中的阴影、光照以及环境光遮挡信息只能用于静态场景，或者场景中静态的物体，一旦光源或物体发生移动或者改变，就不得不实时计算阴影了。")]),t._v(" "),s("h3",{attrs:{id:"_10-1-7-金属光泽度贴图和粗糙度贴图"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_10-1-7-金属光泽度贴图和粗糙度贴图"}},[t._v("#")]),t._v(" 10.1.7 金属光泽度贴图和粗糙度贴图")]),t._v(" "),s("p",[t._v("通过前面第四章材质章节我们知道"),s("code",[t._v("THREE.MeshStandardMaterial")]),t._v("网格标准材质可用于生成闪亮的金属质感表面，也可通过调节粗糙度属性来生成木质或者塑料质感的表面。通过调节金属感程度属性"),s("code",[t._v("metalness")]),t._v("和粗糙程度属性"),s("code",[t._v("roughness")]),t._v("可以生成大部分所需的表面质感，除了通过数值来设置两个属性外，也可以通过这两个属性对应的纹理贴图属性来设置质感。")]),t._v(" "),s("p",[t._v("若想在一个表面粗糙的物体上指定一些闪亮的局部，则可以为"),s("code",[t._v("metalnessMap")]),t._v("属性设置一张金属质感贴图。或相反的，若想在一个光滑的物体上指定一些粗糙的局部，则可以在"),s("code",[t._v("roughnessMap")]),t._v("属性上使用纹理贴图来实现。当使用纹理贴图来设置这两个属性时，在模型的具体位置上，"),s("code",[t._v("metalness")]),t._v("和"),s("code",[t._v("roughness")]),s("strong",[t._v("两个属性的实际值等于属性值本身与相应的贴图中的值的乘积")]),t._v("。")]),t._v(" "),s("h3",{attrs:{id:"_10-1-8-alpha贴图"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_10-1-8-alpha贴图"}},[t._v("#")]),t._v(" 10.1.8 Alpha贴图")]),t._v(" "),s("p",[t._v("Alpha贴图用于控制物体表面的透明度，贴图中的纯黑色部分代表该部分表面完全透明，纯白色部分则代表完全不透明。")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 通过`alphaMap`属性映射光照贴图")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" mtl "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("THREE"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("MeshStandarMaterial")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  alphaMap"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" textureLoader"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("load")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./path/to/img.png'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  alphaTest"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.5")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 设为 0.5 是避免使用半透明特性时可能出现的一些小斑点问题")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h3",{attrs:{id:"_10-1-9-自发光贴图"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_10-1-9-自发光贴图"}},[t._v("#")]),t._v(" 10.1.9 自发光贴图")]),t._v(" "),s("p",[t._v("自发光贴图是一个控制模型表面实现自发光效果的纹理贴图，它的功能类似于材质章节介绍过的"),s("code",[t._v("emissive")]),t._v("属性，但后者只能将模型作为一个整体来控制。自发光特性只能单独影响物体本身，并不能使该物体变成光源影响周边的物体。")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 通过`emissiveMap`属性映射自发光贴图")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" mtl "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("THREE"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("MeshStandarMaterial")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  emissive"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0xffffff")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  emissiveMap"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" textureLoader"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("load")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./path/to/img.png'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("由于"),s("code",[t._v("emissiveMap")]),t._v("的颜色由"),s("code",[t._v("emissive")]),t._v("属性调制，因此需要将"),s("code",[t._v("emissive")]),t._v("属性的值设为非0值才能看到自发光贴图产生的效果（若有光源照射能否体现效果？）")]),t._v(" "),s("h3",{attrs:{id:"_10-1-10-高光贴图"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_10-1-10-高光贴图"}},[t._v("#")]),t._v(" 10.1.10 高光贴图")]),t._v(" "),s("p",[t._v("高光贴图需要使用"),s("code",[t._v("THREE.MeshPhongMatrial")]),t._v("材质，高光贴图用于指定物体表面中哪部分比较闪亮，或者哪部分相对暗淡。贴图中黑色部分表示完全没有高光效果，而白色部分则表示有完全的高光效果。")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 通过`specularMap`属性映射自发光贴图")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" mtl "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("THREE"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("MeshPhongMatrial")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  map"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" img"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  specularMap"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" textureLoader"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("load")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./path/to/img.png'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h3",{attrs:{id:"_10-1-11-使用环境贴图创建伪镜面反射效果"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_10-1-11-使用环境贴图创建伪镜面反射效果"}},[t._v("#")]),t._v(" 10.1.11 使用环境贴图创建伪镜面反射效果")]),t._v(" "),s("p",[t._v("真实的镜面反射效果对CPU计算要求高耗费大，且通常会使用光线追踪算法，为减少耗费，在要求不特别高的场景可以通过创建一个对象所处环境的纹理来伪装镜面反射，并将其应用到指定的对象上。")]),t._v(" "),s("p",[t._v("创建步骤：")]),t._v(" "),s("ul",[s("li",[t._v("创建"),s("code",[t._v("CubeMap")]),t._v("对象。该对象是包含6个纹理的集合，这些纹理可以应用到方块的每个面上。")]),t._v(" "),s("li",[t._v("创建“天空盒”。有了"),s("code",[t._v("CubeMap")]),t._v("对象后，可将其设置为场景的背景。这实际相当于创建了一个很大的方块，并且将摄像机和场景物体都置于其中。这样当我们移动摄像机时，就能够看到背景环境跟随摄像机变换。因此我们也可以手动创建一个大方块模型，将"),s("code",[t._v("CubeMap")]),t._v("对象设置到模型上，最后将这个模型添加到场景中，将相机移到该大方块模型内部。")]),t._v(" "),s("li",[t._v("将"),s("code",[t._v("CubeMap")]),t._v("作为模型的环境贴图使用。用来模拟环境的"),s("code",[t._v("CubeMap")]),t._v("对象同样可以作为纹理应用在模型上。")])]),t._v(" "),s("p",[t._v("创建"),s("code",[t._v("CubeMap")]),t._v("对象需要6张用来构建整个场景的图片，这6张图片的顺序是：右、左、上、下、前、后（即分别是X、Y、Z轴上的正负方向）。three.js会将这些图片整合到一起来创建一个无缝的环境贴图。")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 注意图片顺序")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" imgUrls "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./path/to/right.png'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./path/to/left.png'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./path/to/top.png'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./path/to/botttom.png'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./path/to/front.png'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./path/to/back.png'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 使用立方体纹理加载器加载6个纹理贴图")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" cubeLoader "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("THREE"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("CubeTextureLoader")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" cubeMap "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" cubeLoader"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("load")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("imgUrls"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nscene"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("background "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" cubeMap"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 将立方体纹理贴图设置为场景背景，也就是周围环境")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 将`CubeMap`设为场景中模型的环境贴图，也就是更改模型的材质贴图")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" cubeMaterial "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("THREE"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("MeshStandardMaterial")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  envMap"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" cubeMap"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 使得模型体现出反射周围环境")]),t._v("\n  color"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0xffffff")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  metalness"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 调节金属感程度，使镜面反射更明显")]),t._v("\n  roughness"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 调节粗糙度，使镜面反射更模糊")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 将上面的材质用于创建一个网格对象(物体)")]),t._v("\n")])])]),s("p",[t._v("上面是6张分离的纹理图片设置环境贴图的方式，若纹理图片是一整张的球形等距圆柱投影图(全景图)，则有两种使用方式，一种是最简单的使用一些在线转换工具，将全景图转换成分离的图片文件，然后按照上面分离纹理图的方式使用。"),s("strong",[t._v("另一种就是通过three.js一些额外的操作，直接用这种全景图来生成"),s("code",[t._v("cubeMap")]),t._v("对象，即必须指明该纹理需要使用的映射算法")]),t._v("，但这种"),s("code",[t._v("CubeMap")]),t._v("不能直接用于场景背景，我们需要自行创建天空盒以及对应的材质来实现背景，将其赋值给材质对象的"),s("code",[t._v("envMap")]),t._v("属性。")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 使用标准纹理加载器加载该一张全景图")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" textureLoader "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("THREE"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("TextureLoader")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" cubeMap "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" textureLoader"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("load")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./path/to/panorama.png'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 指明该纹理需要使用的映射算法")]),t._v("\ncubeMap"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("mapping "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("THREE")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("EquirectangularReflectionMapping"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\ncubeMap"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("magFilter "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("THREE")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("LinearFilter"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\ncubeMap"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("minFilter "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("THREE")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("LinearMipMapLinearFilter"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 创建材质")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" equirectShader "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("THREE")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ShaderLib"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'equirect'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" equirectMaterial "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("THREE")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("ShaderMaterial")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  fragmentShader"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" equirectShader"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("fragmentShader"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  vertexShader"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" equirectShader"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("vertexShader"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  uniforms"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" equirectShader"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("uniforms"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  depthWrite"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  side"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("THREE")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("BackSide\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 创建天空盒")]),t._v("\nequirectMaterial"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("uniforms"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'tEquirect'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("value "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" cubeMap"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" skybox "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("THREE"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Mesh")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("THREE"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("BoxGeometry")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),t._v("，"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),t._v("，"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" equirectMaterial"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nscene"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("skybox"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("除了镜面反射外，还可以用环境贴图实现环境折射效果(类似与玻璃工艺品)。为实现这一效果，需要将"),s("code",[t._v("CubeMap")]),t._v("的"),s("code",[t._v("mapping")]),t._v("属性设置为"),s("code",[t._v("THREE.CubeRefractionMapping")]),t._v("，其默认值为环境反射。环境折射的效果程度同样由"),s("code",[t._v("metalness")]),t._v("和"),s("code",[t._v("roughness")]),t._v("两个属性控制。")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("cubeMap"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("mapping "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("THREE")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("CubeRefractionMapping"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("上面提到的只是实现了静态环境的镜面反射效果，也就是反射的只有场景背景，而没有同一场景内的其他模型物体。为了实现包含其他物体的镜面反射，我们需要使用"),s("code",[t._v("THREE.CubeCamera")]),t._v("类。")]),t._v(" "),s("p",[s("code",[t._v("THREE.CubeCamera")]),t._v("可以理解为一个立方体相机，其会分别对着6个方向拍摄6张照片，也就是对包含所有物体的场景拍摄快照并用获得的快照图片来创建"),s("code",[t._v("CubeMap")]),t._v("对象。该构造函数前两个参数分别为摄像机的近平面和远平面，表示只渲染距离该相机在这个区间内的物体，第三个参数为渲染图片的尺寸，尺寸越大产生的反射画面越精细。")]),t._v(" "),s("p",[t._v("使用"),s("code",[t._v("CubeCamera")]),t._v("拍摄场景快照时，要将该摄像机准确摆放在需要产生镜面反射的物体位置上，一般都放在物体的中心位置(如果直接使用物体位置不合适的话)。设置好相机位置后，还需要将该相机的输出"),s("code",[t._v("cubeCamera.renderTarget")]),t._v("与模型的环境贴图属性"),s("code",[t._v("envMap")]),t._v("相连，这样才能是相机获取的快照变为物体表面的镜面反射图像。")]),t._v(" "),s("p",[t._v("最后，我们需要给该相机一个机会去对场景进行拍照，要做到这一点就需要在渲染函数中调用其拍摄方法。")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// THREE.CubeCamera(相机近平面, 相机远平面, 渲染图片尺寸)")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" cubeCamera "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("THREE"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("CubeCamera")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("512")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 将相机放在需要产生镜面反射的物体位置上")]),t._v("\ncubeCamera"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("position"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("copy")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cubeMesh"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("position"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 这里cubeMesh代表上面的进行镜面反射的一个立方体网格对象")]),t._v("\nscene"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cubeCamera"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 将相机拍色的快照输出给物体的环境贴图")]),t._v("\ncubeMaterial"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("envMap "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" cubeCamera"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("renderTarget"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 渲染函数中调用立方体相机进行拍摄更新快照")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("render")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("requestAnimationFrame")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("render"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// other code")]),t._v("\n\n  obj1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("visible "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 若不想某些物体被反射到，则可以像这样在拍摄前隐藏该物体，拍摄完成后再显示出来")]),t._v("\n  cubeMaterial"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("updateCubeMap")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("renderer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" scene"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 拍摄更新快照")]),t._v("\n  obj1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("visible "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  renderer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("render")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("scene"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" camera"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// other code")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h2",{attrs:{id:"_10-2-纹理的高级用途"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_10-2-纹理的高级用途"}},[t._v("#")]),t._v(" 10.2 纹理的高级用途")]),t._v(" "),s("h3",{attrs:{id:"_10-2-1-自定义uv映射"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_10-2-1-自定义uv映射"}},[t._v("#")]),t._v(" 10.2.1 自定义UV映射")]),t._v(" "),s("p",[t._v("UV映射是两个维度(展开为二维)，U和V(即水平方向和垂直方向)，其取值范围都是[0, 1]。")]),t._v(" "),s("h3",{attrs:{id:"_10-2-2-重复纹理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_10-2-2-重复纹理"}},[t._v("#")]),t._v(" 10.2.2 重复纹理")]),t._v(" "),s("p",[t._v("默认情况下，应用纹理时Three.js会尽量实现最好的效果。例如，在方块上使用纹理时，默认会在每个面上都显示完整的纹理，而对于球体则会用完整的问题包围球体。但对于有些情况，我们可能不想纹理直接覆盖整个面或整个几何体(类似CSS中背景图尺寸的水平和垂直方向都100%进行拉伸)，而是让纹理进行重复(类似CSS背景图重复)。要达到此效果，需要先将纹理的包裹属性设置为"),s("code",[t._v("THREE.RepeatWrapping")]),t._v("允许重复整个纹理，默认情况为"),s("code",[t._v("THREE.ClampToEdgeWrapping")]),t._v("不会重复纹理整体，而只重复纹理边缘的像素来填满剩下的空间。")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 设置纹理两个方向的重复行为，wrapS 表示X轴方向，wrapT 表示Y轴方向")]),t._v("\ncubeMesh"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("material"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("map"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("wrapS "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("THREE")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("RepeatWrapping"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\ncubeMesh"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("material"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("map"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("wrapT "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("THREE")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("RepeatWrapping"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 设置纹理两个方向分别的重复次数，须注意这里直接表示体现在面上纹理的重复应用次数，而不是允许的次数")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 纹理会根据所在面的大小和重复次数自动压缩或拉伸尺寸，取值小于1也就是取一部分纹理进行显示，负值则将会产生一个纹理的镜像")]),t._v("\ncubeMesh"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("material"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("map"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("repeat"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("set")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("repeatX"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" repeatY"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 若将包裹属性的值从`RepeatWrapping`修改为`ClampToEdgeWrapping`，则需要设置如下明确的更新纹理")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// cubeMesh.material.map.needsUpdate = true;")]),t._v("\n")])])]),s("h3",{attrs:{id:"_10-2-3-在画布上绘制图案并作为纹理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_10-2-3-在画布上绘制图案并作为纹理"}},[t._v("#")]),t._v(" 10.2.3 在画布上绘制图案并作为纹理")]),t._v(" "),s("p",[t._v("可以将画布应用于目前前面介绍的所有类型的纹理贴图，可以直接将画布看作一张纹理图片就是。")]),t._v(" "),s("h4",{attrs:{id:"_1-将画布作为纹理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-将画布作为纹理"}},[t._v("#")]),t._v(" 1.将画布作为纹理")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 将画布作为纹理只需要用画布元素创建纹理即可，则画布上绘制的内容都可以应用在物体纹理上，包括视频")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" texture "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("THREE"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Texture")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("canvas"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// canvas 表示一个画布DOM元素")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 还需要在渲染函数中更新物体材质")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("render")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// other code ...")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// cubeMesh 表示应用画布材质的网格物体对象")]),t._v("\n  cubeMesh"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("material"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("map"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("needsUpdate "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h4",{attrs:{id:"_2-将画布用作凹凸贴图"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-将画布用作凹凸贴图"}},[t._v("#")]),t._v(" 2.将画布用作凹凸贴图")]),t._v(" "),s("p",[t._v("也就是用画布纹理设置材质对象的"),s("code",[t._v("bumpMap")]),t._v("属性。Three.js好提供了其他方法来动态创建纹理，如"),s("code",[t._v("THREE.DataTexture")]),t._v("，该纹理的"),s("code",[t._v("image.data")]),t._v("属性包含的"),s("code",[t._v("Uint8Array")]),t._v("可直接用于设置纹理的RGB值。")]),t._v(" "),s("h3",{attrs:{id:"_10-2-4-将视频输出作为纹理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_10-2-4-将视频输出作为纹理"}},[t._v("#")]),t._v(" 10.2.4 将视频输出作为纹理")]),t._v(" "),s("p",[t._v("由于视频的形状与物体表面的形状可能并不一样，所以需要确保材质不会生成"),s("code",[t._v("mipmap")]),t._v("。由于材质变化频繁，所以还需要设置简单高效的过滤器。")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" texture "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("THREE"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("VideoTexture")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("video"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// video 表示一个视频DOM元素")]),t._v("\ntexture"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("minFilter "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("THREE")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("LinearFilter"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\ntexture"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("magFilter "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("THREE")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("LinearFilter"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\ntexture"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("format "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("THREE")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("RGBFormat"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 由于视屏也是在不断变化，所以渲染函数中可能也需要告知更新了")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// cubeMesh.material.map.needsUpdate = true;")]),t._v("\n")])])])])}),[],!1,null,null,null);a.default=e.exports}}]);
(window.webpackJsonp=window.webpackJsonp||[]).push([[80],{508:function(s,e,t){"use strict";t.r(e);var a=t(18),n=Object(a.a)({},(function(){var s=this,e=s.$createElement,t=s._self._c||e;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h1",{attrs:{id:"vue工程创建及配置"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#vue工程创建及配置"}},[s._v("#")]),s._v(" Vue工程创建及配置")]),s._v(" "),t("p"),t("div",{staticClass:"table-of-contents"},[t("ul",[t("li",[t("a",{attrs:{href:"#使用vue-cli脚手架创建vue项目"}},[s._v("使用vue-cli脚手架创建vue项目")])])])]),t("p"),s._v(" "),t("h2",{attrs:{id:"使用vue-cli脚手架创建vue项目"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#使用vue-cli脚手架创建vue项目"}},[s._v("#")]),s._v(" 使用vue-cli脚手架创建vue项目")]),s._v(" "),t("p",[s._v("命令行中两个杠"),t("code",[s._v("--")]),s._v("的表示指令，一个杠"),t("code",[s._v("-")]),s._v("的表示参数。")]),s._v(" "),t("p",[s._v("参数"),t("code",[s._v("-g")]),s._v("表示全局安装，安装后以后都能用，不必每个项目再单独安装，可以通过"),t("code",[s._v("vue -V")]),s._v("命令判断是否安装"),t("strong",[s._v("vue-cli")]),s._v("脚手架。")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 全局安装官方脚手架")]),s._v("\n "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("npm")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" @vue/cli -g "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 包名已由1.x/2.x的`vue-cli`改为`@vue/cli`")]),s._v("\n "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("yarn")]),s._v(" global "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),s._v(" @vue/cli "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# yarn")]),s._v("\n\n "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 若已安装旧版 vue-cli，则应先卸载")]),s._v("\n "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("npm")]),s._v(" uninstall vue-cli -g "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# npm")]),s._v("\n "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("yarn")]),s._v(" global remove vue-cli "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# yarn")]),s._v("\n\n "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 安装脚手架后可通过帮助命令查看脚手架都有哪些操作命令")]),s._v("\n vue -h\n")])])]),t("p",[s._v("脚手架安装后就可以根据提供的模板初始化一个vue项目了(也可以不用模板而直接创建一个vue项目)，webpack是模板名(可使用官方提供的其他模板，也可以自定义模板custom)，projectName是创建的该vue项目的名字。")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 创建一个基础工程（cli3+已内置webpack的基本配置）")]),s._v("\n vue create projectName\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 使用 cli2 的模板初始化一个vue工程（cli3+与cli2采用相同的vue命令，但这里只是拉取2.x的模板，cli3+的已改为内置，故cli3直接采用上面create的方式，或使用vue ui）")]),s._v("\n vue init webpack projectName "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 初始化一个基于webpack模板的vue工程")]),s._v("\n\n "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# cli3+ 版本可以直接通过GUI图形化界面进行创建")]),s._v("\n vue ui\n\n "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Mac下若权限不够则需要使用管理者权限执行命令，命令前加`sudo`")]),s._v("\n")])])]),t("p",[s._v("执行上面初始化命令时会提示选择或输入该项目的相关信息及是否使用一些代码检测等辅助工具，操作完成后会提示后面你需要做的三步(即下面3步)。")]),s._v(" "),t("p",[s._v("进入刚刚创建的项目文件夹，项目文件夹是自动生成在上面模板初始化命令所在执行位置的，所以想在哪里创建项目，就要在哪个文件夹下执行步骤2的命令。")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v(" "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" projectName "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 进入创建的工程目录下")]),s._v("\n")])])]),t("p",[s._v("下面的命令是安装默认的一些依赖包，不然工程运行不起来，这里"),t("strong",[s._v("默认安装的是开发环境依赖")]),s._v("，若只安装生产环境依赖则后面要加指令"),t("code",[s._v("--production")]),s._v("，对应则安装dependencies下的依赖。")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("npm")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 安装初始化工程中已添加的依赖")]),s._v("\n")])])]),t("p",[s._v("对于"),t("code",[s._v("cli3+")]),s._v("，若需要自定义一些额外的配置，可以在项目根目录下(与"),t("code",[s._v("package.json")]),s._v("同级)创建一个"),t("code",[s._v("vue.config.js")]),s._v("文件进行相关配置。")]),s._v(" "),t("div",{staticClass:"language-js extra-class"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// vue.config.js")]),s._v("\nmodule"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("exports "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 选项...")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])]),t("p",[s._v("下面的命令是以开发模式运行该vue项目，"),t("code",[s._v("npm run build")]),s._v('则是打包压缩(生产模式)，其实执行的都是package.json文件中"scripts"配置下的命令(最终指向一些nodejs)。')]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("npm")]),s._v(" run dev "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 若package.json中scripts下配置了start，则也可以使用npm start")]),s._v("\n")])])]),t("p",[s._v("至此就可以根据情况进行项目开发了。")])])}),[],!1,null,null,null);e.default=n.exports}}]);
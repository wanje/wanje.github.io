(window.webpackJsonp=window.webpackJsonp||[]).push([[26],{449:function(t,s,a){"use strict";a.r(s);var n=a(18),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"第2章-构建three-js应用的基本组件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#第2章-构建three-js应用的基本组件"}},[t._v("#")]),t._v(" 第2章 构建Three.js应用的基本组件")]),t._v(" "),a("p",[t._v("目录\n")]),a("div",{staticClass:"table-of-contents"},[a("ul",[a("li",[a("a",{attrs:{href:"#_2-1-创建场景"}},[t._v("2.1 创建场景")]),a("ul",[a("li",[a("a",{attrs:{href:"#_2-1-1-场景的基本功能"}},[t._v("2.1.1 场景的基本功能")])]),a("li",[a("a",{attrs:{href:"#_2-1-2-给场景添加雾化效果"}},[t._v("2.1.2 给场景添加雾化效果")])]),a("li",[a("a",{attrs:{href:"#_2-1-3-使用overridematerial属性覆盖场景内材质"}},[t._v("2.1.3 使用overrideMaterial属性覆盖场景内材质")])])])]),a("li",[a("a",{attrs:{href:"#_2-2-几何体和网格"}},[t._v("2.2 几何体和网格")]),a("ul",[a("li",[a("a",{attrs:{href:"#_2-2-1-几何体的属性和方法"}},[t._v("2.2.1 几何体的属性和方法")])]),a("li",[a("a",{attrs:{href:"#_2-2-2-网格对象的属性和方法"}},[t._v("2.2.2 网格对象的属性和方法")])])])]),a("li",[a("a",{attrs:{href:"#_2-3-选择合适的摄像机"}},[t._v("2.3 选择合适的摄像机")]),a("ul",[a("li",[a("a",{attrs:{href:"#_2-3-1-正交投影摄像机和透视投影摄像机"}},[t._v("2.3.1 正交投影摄像机和透视投影摄像机")])]),a("li",[a("a",{attrs:{href:"#_2-3-2-将摄像机聚焦在指定点上"}},[t._v("2.3.2 将摄像机聚焦在指定点上")])])])])])]),a("p"),t._v(" "),a("p",[t._v("本章将了解以下内容：")]),t._v(" "),a("ul",[a("li",[t._v("在Three.js应用中使用的主要组件。")]),t._v(" "),a("li",[t._v("THREE.Scene对象的作用。")]),t._v(" "),a("li",[t._v("几何图形和网格是如何关联的。")]),t._v(" "),a("li",[t._v("正交投影摄像机和透视投影摄像机的区别。")])]),t._v(" "),a("h2",{attrs:{id:"_2-1-创建场景"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-创建场景"}},[t._v("#")]),t._v(" 2.1 创建场景")]),t._v(" "),a("p",[t._v("场景是在渲染是我们想要使用的所有物体、光源的容器。")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" scene "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("THREE"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Scene")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 创建一个场景")]),t._v("\n")])])]),a("p",[t._v("一个场景(THREE.Scene)想要显示任何内容，都需要这几个组件：")]),t._v(" "),a("ul",[a("li",[t._v("摄像机：决定屏幕上哪些内容需要渲染，及哪些内容是此刻能看见的；")]),t._v(" "),a("li",[t._v("光源：决定材质如何显示以及用于产生阴影；")]),t._v(" "),a("li",[t._v("要渲染的对象：即要绘制的东西，文章中提到的“对象”指一个物体，不是指对象数据类型；")]),t._v(" "),a("li",[t._v("渲染器：基于摄像机和场景提供的信息，调用底层图形API执行真正的绘制工作；")])]),t._v(" "),a("p",[t._v("场景保存所有对象、光源和渲染所需的其他对象，其不仅仅是一个对象数组，还包含了场景图树形结构中的所有节点(即对象下的子对象也包含，所以也叫场景树)。所有添加到场景中的对象(包括"),a("code",[t._v("THREE.Scene")]),t._v("本身)，都继承自"),a("code",[t._v("Three.Object3D")]),t._v("对象。"),a("code",[t._v("Three.Object3D")]),t._v("对象也可以有自己的子对象，我们也可以使用它的子对象创建一个Three.js能解释和渲染的对象树。")]),t._v(" "),a("h3",{attrs:{id:"_2-1-1-场景的基本功能"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-1-场景的基本功能"}},[t._v("#")]),t._v(" 2.1.1 场景的基本功能")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("scene"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// add()方法向场景中添加相关对象，如要绘制的图形、各种光源、相机等")]),t._v("\nscene"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("remove")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// add()方法移除场景某个对象（移除前应确认该obj就是你要移除的对象，如可以通过`obj instanceof THREE.Mesh`来判断该对象是否是几何体，避免加个相机或光源移除看）")]),t._v("\nscene"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getObjectByName")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("objName"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("recursive"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// getObjectByName()方法根据对象name查找到相应的对象，布尔参数`recursive`为假时在调用场景内子对象中查找，为真时在其所有后代对象中查找(即包括子对象的子对象)（可以通过`obj.name`属性给相应的对象设置name唯一标识）")]),t._v("\nscene"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("children"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// children 属性保存了场景中所有子对象，注意其包括相机和光源等，其返回一个数组")]),t._v("\nscene"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("traverse")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("obj")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// traverse(fn)方法传入一个回调`fn`作用于场景类每个子对象(包括子对象内的子对象，即其会自动递归)，知道遍历完场景树中的所有对象为止，该回调`fn`接受当前遍历到的对象为参数")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 也可以使用`for循环`或`forEach`方法遍历场景的`children`属性来达到类似的效果，但此时无法递归遍历场景树中更深的子对象，只有场景树只有一层时(即场景内对象不包含子对象和更深的子对象)与`traverse`效果相同")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nscene"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("fog "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" FogObj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// fog 属性给场景设置雾化效果")]),t._v("\nscene"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("overrideMaterial "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" MaterialObj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// overrideMaterial 属性给场景覆盖材质效果")]),t._v("\n")])])]),a("p",[t._v("渲染场景的时候，相机"),a("code",[t._v("THREE.Camera")]),t._v("对象会自动地被Three.js添加进来。但手动添加相机会更好(一方面可以自己选择相机类型)，尤其是当需要处理多个摄像机的时候。")]),t._v(" "),a("h3",{attrs:{id:"_2-1-2-给场景添加雾化效果"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-2-给场景添加雾化效果"}},[t._v("#")]),t._v(" 2.1.2 给场景添加雾化效果")]),t._v(" "),a("p",[t._v("即场景中的物体离摄像机越远就会变得越模糊，就像有雾笼罩着一样。")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("scene"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("fog "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("THREE"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Fog")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0xffffff")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.02")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Fog(color, near, far)，创建线性增长浓度的雾化，color为十六进制颜色，near为近处雾开始的浓度，far为远处雾结束的浓度，浓度在开始位置与结束位置间是线下分配的")]),t._v("\nscene"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("fog "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("THREE"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("FogExp2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0xffffff")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.01")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// FogExp2(color, deep)，创建指数级增长浓度的雾化，color为十六进制颜色，deep为雾的起始浓度，然后浓度根据距离呈指数增长")]),t._v("\n")])])]),a("h3",{attrs:{id:"_2-1-3-使用overridematerial属性覆盖场景内材质"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-3-使用overridematerial属性覆盖场景内材质"}},[t._v("#")]),t._v(" 2.1.3 使用overrideMaterial属性覆盖场景内材质")]),t._v(" "),a("p",[t._v("当设置了"),a("code",[t._v("overrideMaterial")]),t._v("属性后，场景中所有的物体都会使用该属性指向的材质，即使物体本身也设置了材质(也会被覆盖)。当某一个场景中所有物体都共享同一个材质时，使用该属性可以通过减少Three.js管理的材质数量来提高运行效率，但是实际应用中，该属性通常并不非常实用(因为很少情况下场景内所有物体都是用同一材质)。")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("scene"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("overrideMaterial "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("THREE"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("MeshLambertMaterial")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("color"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0xffffff")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 设置一种材质")]),t._v("\n")])])]),a("h2",{attrs:{id:"_2-2-几何体和网格"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-几何体和网格"}},[t._v("#")]),t._v(" 2.2 几何体和网格")]),t._v(" "),a("p",[t._v("几何体就是一个几何图形，但不添加材质就看不见，而网格就是几何体添加材质后的结果(通过材质的表现使得几何体可以具象化看见)，网格是建立在几何体之上的，可以看作是添加了一种会多种材质后的输出物，其不是单指添加了线框结构的几何体结果，而是表示使用任何材质作用在几何体上后使其具象化可视化后的结果，此时网格就可以添加进场景进行渲染了。")]),t._v(" "),a("h3",{attrs:{id:"_2-2-1-几何体的属性和方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-1-几何体的属性和方法"}},[t._v("#")]),t._v(" 2.2.1 几何体的属性和方法")]),t._v(" "),a("p",[t._v("Three.js内置了很多开箱即用的几何体，我们也可以自定义一个几何体，自定义示例：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 点集(顶点)")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" vertices "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("THREE"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Vector3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("THREE"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Vector3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 定义一个三维向量(也即三维坐标点)")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("THREE"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Vector3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("THREE"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Vector3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 面集")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" faces "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("THREE"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Face3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 由3个顶点定义一个三角形(参数为点在点集中的索引)，点的排列顺序决定三角形的正面还是背面朝向摄像机，顺时针方向则为正面，逆时针方向则为背面")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("THREE"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Face3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("THREE"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Face3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("THREE"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Face3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" geom "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("THREE"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Geometry")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 声明一个几何体实例")]),t._v("\ngeom"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("vertices "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" vectors"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 将定义的点集和面集赋值给几何体的相关属性，从而将点面等关联起来")]),t._v("\ngeom"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("faces "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" faces"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// geom.verticesNeedUpdate = true; // 默认情况下Threejs认为组成网格的几何体在整个生命周期内是不会改变的，要修改则每次更改顶点数据后需要将verticesNeedUpdate属性置为true")]),t._v("\ngeom"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("computeFaceNormals")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 调用computeFaceNormals()方法进行每个面计算，其会决定每个面的法向量，法向量用于决定不同光源下的的颜色。若要更新几何体则每次要重新调用该方法。")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" geomClone "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" geom"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("clone")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// clone()方法可以克隆复制一个一样的几何体，可对克隆体进行单独操作而与本体无关")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 若几何体添加材质进行了mesh创建网格等操作，则应更新合并后的对象相关数据，而不是原始对象的数据")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 这里mesh是多个材质附着在几何体上，每个都形成了一个新的网格(mesh)，所以这里对children内的几何体都要进行更新")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// mesh.children.forEach(function (e) {")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//     e.geometry.vertices = vertices;")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//     e.geometry.verticesNeedUpdate = true;")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//     e.geometry.computeFaceNormals();")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//     delete e.geometry.__directGeometry // 移除原始几何体对象？")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// });")]),t._v("\n")])])]),a("p",[t._v("为几何体添加线框")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" materials "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("THREE"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("MeshBasicMaterial")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("color"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0x000000")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" wireframe"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// wireframe属性表示开启线框")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("THREE"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("MeshLambertMaterial")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("opacity"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.6")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" color"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0x44ff44")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" transparent"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" mesh "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("THREE")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("SceneUtils"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("createMultiMaterialObject")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("geom"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" materials"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 该方法可使用多个材质创建网格，其会创建一个网格组(数组)，每个item都是一个Mesh网格对象")]),t._v("\nmesh"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("castShadow "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nmesh"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("children"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("forEach")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("e")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 为每个网格开启阴影")]),t._v("\n    e"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("castShadow "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 除了上面添加材质的方式给几何体添加线框，还可以下面的方式添加线框")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" wireframe "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("THREE"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("WireframeGeometry")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("geom"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 创建线框")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" line "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("THREE"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("LineSegments")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("wireframe"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 根据线框数据绘制线段")]),t._v("\nscene"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("line"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 将线段添加进场景，至此就可以绘制线框了")]),t._v("\nline"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("material"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("linewidth "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 可以设置线框宽度等")]),t._v("\n")])])]),a("h3",{attrs:{id:"_2-2-2-网格对象的属性和方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-2-网格对象的属性和方法"}},[t._v("#")]),t._v(" 2.2.2 网格对象的属性和方法")]),t._v(" "),a("p",[t._v("网格对象提供了几个属性和方法用于改变其在场景找那个的位置和显示效果。")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" geom "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("THREE"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("BoxGeometry")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" material "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("THREE"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("MeshLambertMaterial")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("color"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0x44ff44")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" cube "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("THREE"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Mesh")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("geom"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" material"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 添加材质后的几何体(网格)才是可以添加进场景中的对象(物体)")]),t._v("\nscene"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cube"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\ncube"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("position"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("x "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("7")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// positon属性上的`x、y、z`属性分别表示该对象相对父对象在各方向上的位置，通常父对象是THREE.Scene对象或者THREE.Object3D对象或者THREE.Mesh对象")]),t._v("\ncube"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("positon"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("set")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("7")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// set方法可同时设置三个方向上的位置偏移量")]),t._v("\ncube"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("positon "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("THREE"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Vector3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("7")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 因positon属性是一个THREE.Vector3对象(向量)，所以我们也可以直接给它赋值一个向量")]),t._v("\ncube"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("rotation"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("x "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("7")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// rotation属性上的`x、y、z`属性分别表示该对象绕对应轴的旋转弧度")]),t._v("\ncube"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("rotation"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("set")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("7")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// set方法可同时设置三个方向上的旋转偏移量")]),t._v("\ncube"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("rotation "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("THREE"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Vector3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("7")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 因rotation属性也是一个THREE.Vector3对象(向量)，所以我们也可以直接给它赋值一个向量")]),t._v("\ncube"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("scale"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("x "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// scale属性上的`x、y、z`属性分别表示该对象沿对应轴向的缩放倍数，scale.set(x,y,z)方法可同时设置三个方向上的缩放倍数")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 上面的set()方法都来自其原型")]),t._v("\ncube"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("visible "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// visible属性表示是否可见，即是否渲染在场景中，默认true，当设置为false时将不会渲染(也就不可见)")]),t._v("\ncube"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("translateX")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("7")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// translateX(d)方法表示沿`X`轴平移`d`个单位距离，效果同`position.x += d`(但translate始终是相对初始位置而不是上一次的位置或是原点)，另有`translateY`和`translateZ`方法，其内部都是调用的`translateOnAxis`方法")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 也可以使用`translateOnAxis(axis, distance)`方法进行沿指定轴向`axis`(一个方向向量)偏移距离`distance`")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 注意，cube.translate()方法已被移除，由translateOnAxis代替")]),t._v("\ncube"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("rotateX")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("7")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// rotateX(r)方法表示绕`X`轴旋转`r`弧度，效果同`rotation.x += r`(但rotate始终是相对初始位置而不是上一次的位置或是原点)，另有`rotateY`和`rotateZ`方法")]),t._v("\n")])])]),a("h2",{attrs:{id:"_2-3-选择合适的摄像机"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-选择合适的摄像机"}},[t._v("#")]),t._v(" 2.3 选择合适的摄像机")]),t._v(" "),a("p",[t._v("透视投影视图是最自然的视图，物体距离相机越远则会被渲染得越小(符合现实查看实景时的视野)；而正交投影视图下，物体相对相机的距离对其被渲染的结果是没有影响的，物体是按照其实际大小映射的，这种相机通常被用于二维游戏中。")]),t._v(" "),a("h3",{attrs:{id:"_2-3-1-正交投影摄像机和透视投影摄像机"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-1-正交投影摄像机和透视投影摄像机"}},[t._v("#")]),t._v(" 2.3.1 正交投影摄像机和透视投影摄像机")]),t._v(" "),a("h4",{attrs:{id:"透视投影相机"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#透视投影相机"}},[t._v("#")]),t._v(" 透视投影相机")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 透视投影相机")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// new THREE.PerspectiveCamera(fov, aspect, near, far, zoom);")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" camera "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("THREE"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("PerspectiveCamera")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("45")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" window"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("innerWidth "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" window"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("innerHeight"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[a("code",[t._v("PerspectiveCamera")]),t._v("参数说明(相关参数使用默认值则可省略，但必须按顺序)：")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("fov")]),t._v("：视角(视野角度fields of vision)，可理解为👁眼睛可张开的横向角度可视范围，即可视角度，默认50")]),t._v(" "),a("li",[a("code",[t._v("aspect")]),t._v("：长宽比，指横向和纵向可视范围的比例，一般为放置渲染器的容器长宽比，全屏的话推荐使用"),a("code",[t._v("window.innerWidth/window.innerHeight")]),t._v("(该值也为默认值)")]),t._v(" "),a("li",[a("code",[t._v("near")]),t._v("：近面距离，定义从距离摄像机多近的距离开始渲染，一般设置得尽量小，使得能够渲染从摄像机位置能看到的所有物体，默认0.1")]),t._v(" "),a("li",[a("code",[t._v("far")]),t._v("：远面距离，定义从摄像机位置能看多远，设置过小可能超出的物体渲染不到，过大又会影响渲染性能，推荐使用默认值1000")]),t._v(" "),a("li",[a("code",[t._v("zoom")]),t._v("：变焦(即缩放)，该值可以放大和缩小场景，当为负值时场景会上下颠倒，默认1")])]),t._v(" "),a("p",[a("code",[t._v("fov")]),t._v("决定了横向视野范围，通过"),a("code",[t._v("aspect")]),t._v("也就相应确定了纵向视野范围，最后由"),a("code",[t._v("near")]),t._v("和"),a("code",[t._v("far")]),t._v("决定夹在两者之间的区域将会渲染。")]),t._v(" "),a("h4",{attrs:{id:"正交投影相机"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#正交投影相机"}},[t._v("#")]),t._v(" 正交投影相机")]),t._v(" "),a("p",[t._v("由于正交投影摄像机渲染出的物体大小是按实际大小映射的，所以它并不关心使用什么长宽比，或者以什么样的视角来观察场景。当使用正交投影摄像机时，要定义的是一个需要被渲染的方块区域。")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 正交投影相机")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// new THREE.OrthographicCamera(left, right, top, bottom, near, far, zoom);")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" camera "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("THREE"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("OrthographicCamera")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("200")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("200")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("200")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[a("code",[t._v("OrthographicCamera")]),t._v("参数说明：")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("left")]),t._v("、"),a("code",[t._v("right")]),t._v("、"),a("code",[t._v("top")]),t._v("、"),a("code",[t._v("bottom")]),t._v("：分别对应左、右、上、下边界位置")]),t._v(" "),a("li",[a("code",[t._v("near")]),t._v("、"),a("code",[t._v("far")]),t._v("、"),a("code",[t._v("zoom")]),t._v("：同透视投影相机")])]),t._v(" "),a("p",[t._v("前六个参数实际就是规定左、右、上、下、前、后六个面之间形成了一个立方体可渲染区域，在此区域内就可见，否则不可见。")]),t._v(" "),a("h3",{attrs:{id:"_2-3-2-将摄像机聚焦在指定点上"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-2-将摄像机聚焦在指定点上"}},[t._v("#")]),t._v(" 2.3.2 将摄像机聚焦在指定点上")]),t._v(" "),a("p",[t._v("通常情况下，相机会指向场景的中心，默认也就是一个0向量"),a("code",[t._v("new THREE.Vector3(0,0,0)")]),t._v("，若场景位置有移动，则仍然可以使用"),a("code",[t._v("scene.position")]),t._v("来指向其中心。")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// camera.lookAt(new THREE.Vector3(x, y, z)); 相机看向 (x, y, z) 坐标点")]),t._v("\ncamera"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("lookAt")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("scene"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("position"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 相机聚焦在场景中心")]),t._v("\ncamera"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("lookAt")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("mesh"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("position"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 相机聚焦在某个网格对象(物体)上，此时相机焦点将跟随该物体，即使物体位置发生变化看着也是没动(相机焦点也需每帧同步跟新，相当于相机在动)，而是周边的物体在动")]),t._v("\n")])])])])}),[],!1,null,null,null);s.default=e.exports}}]);
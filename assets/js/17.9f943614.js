(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{436:function(v,_,o){"use strict";o.r(_);var c=o(18),e=Object(c.a)({},(function(){var v=this,_=v.$createElement,o=v._self._c||_;return o("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[o("h1",{attrs:{id:"第6章-全新的布局方式"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#第6章-全新的布局方式"}},[v._v("#")]),v._v(" 第6章 全新的布局方式")]),v._v(" "),o("h2",{attrs:{id:"多列布局"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#多列布局"}},[v._v("#")]),v._v(" 多列布局")]),v._v(" "),o("p",[v._v("多列布局最初的目的是用于解决文本排版，像一些期刊杂志、报纸内容的排版。")]),v._v(" "),o("h3",{attrs:{id:"columns"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#columns"}},[v._v("#")]),v._v(" columns")]),v._v(" "),o("p",[v._v("多列布局大多场景只需要用到"),o("code",[v._v("columns")]),v._v("属性即可，有时也会用到"),o("code",[v._v("columns-gap")]),v._v("设置列间间隔距离。")]),v._v(" "),o("p",[o("code",[v._v("columns")]),v._v("属性是"),o("code",[v._v("columns-count")]),v._v("和"),o("code",[v._v("columns-width")]),v._v("属性的缩写，且值的顺序无关，会自动根据值的类型匹配属于哪个属性。"),o("code",[v._v("columns: <count> <width>;")]),v._v("或"),o("code",[v._v("columns: <width> <count>;")]),v._v("均可，且两个值都是可以选的，默认都为"),o("code",[v._v("auto")]),v._v("。")]),v._v(" "),o("p",[o("code",[v._v("columns-count")]),v._v("表示想要分成的“理想”的"),o("strong",[v._v("列数")]),v._v("，值为正整数或"),o("code",[v._v("auto")]),v._v("(默认值)。")]),v._v(" "),o("p",[o("code",[v._v("columns-width")]),v._v("表示每列的“最佳”"),o("strong",[v._v("宽度")]),v._v("，值为表示尺寸的长度值("),o("strong",[v._v("不支持百分比值")]),v._v(")或"),o("code",[v._v("auto")]),v._v("(默认值)。")]),v._v(" "),o("p",[v._v("上面说的“理想”和“最佳”的意思就是浏览器只是尽量往设定的值靠拢，而并不一定就刚好是这个值，最终实际多少列是由"),o("code",[v._v("columns-count")]),v._v("和"),o("code",[v._v("columns-width")]),v._v("这两个属性共同决定的，并没有哪个属性的优先级一定更高，"),o("strong",[v._v("最终实际列数是按照最小原则决定的")]),v._v("，即看"),o("code",[v._v("columns-count")]),v._v("设定的列数与将整行按"),o("code",[v._v("columns-width")]),v._v("宽度可分割出的列数哪个值更小就是哪个。")]),v._v(" "),o("p",[v._v("多列布局的每一列的高度并不总是相等的，内容的分隔也不总是均匀的，浏览器有自己的一套算法。")]),v._v(" "),o("h3",{attrs:{id:"columns-gap-gap"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#columns-gap-gap"}},[v._v("#")]),v._v(" columns-gap/gap")]),v._v(" "),o("p",[o("code",[v._v("columns-gap")]),v._v("表示每一列之间的空白间隙大小，可以是长度值，也可以是百分比值(相对整行)。")]),v._v(" "),o("p",[v._v("也可直接使用"),o("code",[v._v("gap")]),v._v("属性替代(作用一样)："),o("code",[v._v("gap")]),v._v("属性实际是"),o("code",[v._v("columns-gap")]),v._v("属性和"),o("code",[v._v("row-gap")]),v._v("属性的缩写，是统一多列布局、Flex弹性布局和Grid网格布局的间隙设置的属性。")]),v._v(" "),o("h3",{attrs:{id:"columns-rule"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#columns-rule"}},[v._v("#")]),v._v(" columns-rule")]),v._v(" "),o("p",[o("code",[v._v("columns-rule")]),v._v("用于设置每列之间的分割线样式，语法同"),o("code",[v._v("border")]),v._v("和"),o("code",[v._v("outline")]),v._v("，且不占据空间，其也是"),o("code",[v._v("columns-rule-style")]),v._v("/"),o("code",[v._v("columns-rule-width")]),v._v("/"),o("code",[v._v("columns-rule-color")]),v._v("三个属性的简写。")]),v._v(" "),o("h3",{attrs:{id:"columns-span"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#columns-span"}},[v._v("#")]),v._v(" columns-span")]),v._v(" "),o("p",[o("code",[v._v("columns-span")]),v._v("类似table表格中的"),o("code",[v._v("solspan")]),v._v("列合并(html属性，非css属性，表格另有"),o("code",[v._v("rowspan")]),v._v("行合并，但这里没有)，该属性设置在多列布局的子元素上，表格该内容是否跨多列展示。")]),v._v(" "),o("p",[v._v("其只有两个值：")]),v._v(" "),o("ul",[o("li",[o("code",[v._v("none")]),v._v("，表示不跨列展示，默认值")]),v._v(" "),o("li",[o("code",[v._v("all")]),v._v("，表示跨列展示，且是跨所有列，即占用整行")])]),v._v(" "),o("h3",{attrs:{id:"columns-fill"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#columns-fill"}},[v._v("#")]),v._v(" columns-fill")]),v._v(" "),o("p",[o("code",[v._v("columns-fill")]),v._v("用于设置如何去分配内容填充在每一列中（一般容器有设置高度才容易看出各值的差异），默认"),o("code",[v._v("balance")]),v._v("，有如下几个值：")]),v._v(" "),o("ul",[o("li",[o("code",[v._v("balance")]),v._v("，表示尽可能平衡各列的内容量，使每列的内容量差不多")]),v._v(" "),o("li",[o("code",[v._v("auto")]),v._v("，表示按顺序填充每一列，前一列内容满了再换到第二列，以此类推")]),v._v(" "),o("li",[o("code",[v._v("balance-all")]),v._v("，表示尽可能平衡各列的内容量，使每列的内容量差不多，即使是分隔断开的上下文，"),o("strong",[v._v("目前无浏览器支持")]),v._v("无法查看效果。")])]),v._v(" "),o("h3",{attrs:{id:"两端对齐和元素断点位置控制"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#两端对齐和元素断点位置控制"}},[v._v("#")]),v._v(" 两端对齐和元素断点位置控制")]),v._v(" "),o("p",[v._v("多列布局的首尾列会自动两端对齐，再设置各列间隙"),o("code",[v._v("gap")]),v._v("即可，唯一缺点是只适合实现单行内容的两端对齐效果（这里单行只是的从容器整体来看，不存在行数分割）。")]),v._v(" "),o("p",[o("code",[v._v("break-inside")]),v._v("属性(并非多列布局专用)可定义页面打印、多列布局中内容发生中断(即本该是放在同一块中的内容被分割在了多个列中，比如同一个段落的内容可能第一列还有空间填充了一部分，剩余的又在第二列)时元素的表现形式。该属性有几个可选值："),o("code",[v._v("auto")]),v._v("、"),o("code",[v._v("avoid")]),v._v("、"),o("code",[v._v("avoid-page")]),v._v("、"),o("code",[v._v("avoid-column")]),v._v("等。")]),v._v(" "),o("ul",[o("li",[o("code",[v._v("auto")]),v._v("，表示元素可以中断")]),v._v(" "),o("li",[o("code",[v._v("avoid")]),v._v("，表示元素不能中断，若我们希望每个列元素都是独立的，不能被拆分到多个列中，可以设置该值")])]),v._v(" "),o("p",[v._v("默认情况下，元素片段在跨行/列/页(如打印)时的样式是分隔渲染的，如边框或者圆角都是分割开的(就像直接切开的)，若希望即使元素内容因为分列断开，其一些像边框/阴影等属性能完整渲染而不是被分割，则可以使用"),o("code",[v._v("box-decoration-break")]),v._v("属性实现，其有两个值：")]),v._v(" "),o("ul",[o("li",[o("code",[v._v("slice")]),v._v("，即断开，如同被切开一样，为默认值")]),v._v(" "),o("li",[o("code",[v._v("clone")]),v._v("，表示断开位置的各元素样式独自渲染，就像被复制了一份，而不是直接切开")])]),v._v(" "),o("p",[o("code",[v._v("box-decoration-break")]),v._v("属性并非对所有样式都有效，其只能影响部分CSS属性的渲染，有效的包含："),o("code",[v._v("background、border")]),v._v("、"),o("code",[v._v("border-image")]),v._v("、"),o("code",[v._v("border-radius")]),v._v("、"),o("code",[v._v("box-shadow")]),v._v("、"),o("code",[v._v("margin")]),v._v("、"),o("code",[v._v("padding")]),v._v("、"),o("code",[v._v("clip-path")]),v._v("。但是该属性目前在Chrome和Safari下只是部分支持，对多列和分页场景暂不支持，而像普通内联元素换行的情况是支持的。")])])}),[],!1,null,null,null);_.default=e.exports}}]);
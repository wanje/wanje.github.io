(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{372:function(s,t,a){s.exports=a.p+"assets/img/THREE.X_Pass.ad5dc2fd.jpg"},373:function(s,t,a){s.exports=a.p+"assets/img/THREE.FilmPass.d27b311d.jpg"},374:function(s,t,a){s.exports=a.p+"assets/img/THREE.BloomPass.d3208135.jpg"},375:function(s,t,a){s.exports=a.p+"assets/img/THREE.DotScreenPass.dc881086.jpg"},442:function(s,t,a){"use strict";a.r(t);var n=a(18),e=Object(n.a)({},(function(){var s=this,t=s.$createElement,n=s._self._c||t;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("h1",{attrs:{id:"第11章-自定义着色器和后期处理"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#第11章-自定义着色器和后期处理"}},[s._v("#")]),s._v(" 第11章 自定义着色器和后期处理")]),s._v(" "),n("p",[s._v("本章介绍的所有后期效果都是在已经渲染完成一帧场景画面之后添加的，所以称为“后期”处理。")]),s._v(" "),n("h2",{attrs:{id:"_11-1-配置three-js以进行后期处理"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_11-1-配置three-js以进行后期处理"}},[s._v("#")]),s._v(" 11.1 配置Three.js以进行后期处理")]),s._v(" "),n("p",[s._v("为了能够使用Three.js进行后期处理，我们需要进行如下一些修改：")]),s._v(" "),n("ul",[n("li",[s._v("创建"),n("code",[s._v("THREE.EffectComposer")]),s._v("(效果组合器)对象，在该对象上我们可以添加后期处理通道；")]),s._v(" "),n("li",[s._v("配置"),n("code",[s._v("THREE.EffectComposer")]),s._v("对象，使它可以渲染场景，并应用后期处理；")]),s._v(" "),n("li",[s._v("在渲染循环中，使用"),n("code",[s._v("THREE.EffectComposer")]),s._v("来渲染场景、应用通道和输出结果。")])]),s._v(" "),n("h3",{attrs:{id:"_1-创建three-effectcomposer对象"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-创建three-effectcomposer对象"}},[s._v("#")]),s._v(" 1.创建"),n("code",[s._v("THREE.EffectComposer")]),s._v("对象")]),s._v(" "),n("p",[s._v("首先需要引入相应的JS文件，这些文件在"),n("code",[s._v("examples/js/postprocessing")]),s._v("和"),n("code",[s._v("examples/js/shaders")]),s._v("目录下。\n为了使得"),n("code",[s._v("THREE.EffectComposer")]),s._v("正常工作，至少需要包含如下的几个文件(Pass可理解为通道)：")]),s._v(" "),n("ul",[n("li",[n("code",[s._v("postprocessing/EffectComposer.js")]),s._v("提供"),n("code",[s._v("THREE.EffectComposer")]),s._v("对象；")]),s._v(" "),n("li",[n("code",[s._v("postprocessing/ShaderPass.js")]),s._v("是"),n("code",[s._v("THREE.EffectComposer")]),s._v("内部使用到的文件；")]),s._v(" "),n("li",[n("code",[s._v("postprocessing/MaskPass.js")]),s._v("是"),n("code",[s._v("THREE.EffectComposer")]),s._v("内部使用到的文件；")]),s._v(" "),n("li",[n("code",[s._v("postprocessing/RenderPass.js")]),s._v("用于在"),n("code",[s._v("THREE.EffectComposer")]),s._v("对象上添加渲染通道，若没有通道，场景就不会被渲染；")]),s._v(" "),n("li",[n("code",[s._v("shaders/CopyShader.js")]),s._v("是"),n("code",[s._v("THREE.EffectComposer")]),s._v("内部使用到的文件。")])]),s._v(" "),n("p",[s._v("以下两个文件可用于产生一种类似胶片的效果：")]),s._v(" "),n("ul",[n("li",[n("code",[s._v("postprocessing/FilmPass.js")])]),s._v(" "),n("li",[n("code",[s._v("shaders/FilmShader.js")])])]),s._v(" "),n("p",[s._v("创建"),n("code",[s._v("THREE.EffectComposer")]),s._v("对象：")]),s._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" renderer "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("THREE"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("WebGLRenderer")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" composer "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("THREE"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("EffectComposer")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("renderer"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])]),n("h3",{attrs:{id:"_2-为后期处理配置three-effectcomposer"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-为后期处理配置three-effectcomposer"}},[s._v("#")]),s._v(" 2.为后期处理配置"),n("code",[s._v("THREE.EffectComposer")])]),s._v(" "),n("p",[s._v("每个通道都会按照其加入到"),n("code",[s._v("THREE.EffectComposer")]),s._v("的顺序执行。第一个加入的通道是"),n("code",[s._v("THREE.RenderPass")]),s._v("，该通道会渲染场景，但渲染结果不会输出到屏幕上：")]),s._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" renderPass "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("THREE")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("RenderPass")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("scene"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" camera"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 通过 addPass 方法向效果组合器中添加通道")]),s._v("\ncomposer"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("addPass")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("renderPass"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 添加一个可以将结果输出到屏幕的通道(并不是所有通道都能实现该功能)")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" filmPass "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("THREE"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("FilmPass")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.8")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.325")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("256")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("false")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 这里添加一个胶片效果通道")]),s._v("\nfilmPass"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("renderToScreen "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 使得结果可以输出到屏幕上")]),s._v("\ncomposer"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("addPass")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("filmPass"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])]),n("h3",{attrs:{id:"_3-更新渲染循环"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-更新渲染循环"}},[s._v("#")]),s._v(" 3.更新渲染循环")]),s._v(" "),n("p",[s._v("需要在循环中使用组合器来替换原来的"),n("code",[s._v("THREE.WebGLRenderer")]),s._v("。")]),s._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" clock "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("THREE"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("Clock")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("render")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" delta "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" clock"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("getDelta")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("requestAnimationFrame")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("render"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// renderer.render(scene, camera); 替换为如下组合器渲染")]),s._v("\n  composer"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("render")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("delta"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])]),n("h2",{attrs:{id:"_11-2-后期处理通道"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_11-2-后期处理通道"}},[s._v("#")]),s._v(" 11.2 后期处理通道")]),s._v(" "),n("p",[s._v("Three.js库提供了许多后期处理通道，这些通道可以直接添加到"),n("code",[s._v("THREE.EffectComposer")]),s._v("组合器中使用。")]),s._v(" "),n("p",[s._v("Three.js提供的可用的通道及功能概述：\n"),n("img",{attrs:{src:a(372),alt:"Three.js提供的后期处理可用通道"}})]),s._v(" "),n("p",[s._v("Three.js还提供了另一种更好的景深效果，该效果可以利用"),n("code",[s._v("THREE.ShaderPass")]),s._v("调用着色器"),n("code",[s._v("THREE.BokehShader2")]),s._v("和"),n("code",[s._v("THREE.DOFMipMapShader")]),s._v("来实现，使用这些着色器需要一些较为复杂的设置。")]),s._v(" "),n("h3",{attrs:{id:"_11-2-1-简单后期处理通道"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_11-2-1-简单后期处理通道"}},[s._v("#")]),s._v(" 11.2.1 简单后期处理通道")]),s._v(" "),n("p",[n("code",[s._v("THREE.ShaderPass")]),s._v("和"),n("code",[s._v("THREE.TexturePass")]),s._v("两个通道可以将原始渲染结果的输出作为其他通道场景的输入，以此来重用原始渲染结果，当要分别显示多个后期处理通道的单个效果时很有用。")]),s._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" renderPass "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("THREE")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("RenderPass")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("scene"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" camera"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\ncomposer"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("addPass")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("renderPass"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// `THREE.ShaderPass`通道的作用是可以将前一个通道的输出结果复制到屏幕上，因有些通道不能直接将结果输出到屏幕上")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 所以对于应用了不能直接将结果输出到屏幕上的通道，往往需要在最后将该通道添加到组合器中")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" shaderPass "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("THREE")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("ShaderPass")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("THREE")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("CopyShader"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nshaderPass"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("renderToScreen "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\ncomposer"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("addPass")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("shaderPass"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" renderedScene "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("THREE"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("TexturePass")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("composer"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("renderTarget2"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 将上面`renderedScene`作为其他组合器的输入，就不需从零开始渲染场景")]),s._v("\n")])])]),n("h4",{attrs:{id:"_1-使用three-filmpass创建类似电视的效果"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-使用three-filmpass创建类似电视的效果"}},[s._v("#")]),s._v(" 1.使用"),n("code",[s._v("THREE.FilmPass")]),s._v("创建类似电视的效果")]),s._v(" "),n("p",[s._v("前面已介绍如何创建"),n("code",[s._v("THREE.FilmPass")]),s._v("，下面介绍如何结合上面提到的"),n("code",[s._v("THREE.TexturePass")]),s._v("复用原始渲染结果来使用该效果。")]),s._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" filmPass "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("THREE"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("FilmPass")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.8")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.325")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("256")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("false")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 参数说明见下图")]),s._v("\nfilmPass"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("renderToScreen "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 使得结果可以输出到屏幕上")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" filmComposer "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("THREE"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("EffectComposer")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("renderer"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nfilmComposer"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("addPass")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("renderedScene"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 将`THREE.TexturePass`的输出作为组合器的第一个通道")]),s._v("\nfilmComposer"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("addPass")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("filmPass"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])]),n("p",[n("code",[s._v("THREE.FilmPass")]),s._v("的四个参数按顺序说明如下：\n"),n("img",{attrs:{src:a(373),alt:"THREE.FilmPass参数说明"}})]),s._v(" "),n("p",[s._v("这些参数除了在实例化时直接传入，还可以通过如下方式在实例上进行更改设置：")]),s._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// uniforms 属性可直接与WebGL进行通信，将在自定义着色器中介绍")]),s._v("\nfilmPass"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("uniforms"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("grayscale"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("value "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'grayscale参数对应值'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nfilmPass"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("uniforms"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("nIntensity"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("value "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'noiseIntensity参数对应值'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nfilmPass"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("uniforms"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("sIntensity"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("value "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'scanlinesIntensity参数对应值'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nfilmPass"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("uniforms"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("sCount"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("value "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'scanlinesCount参数对应值'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])]),n("h4",{attrs:{id:"_2-使用three-bloompass在场景中添加泛光效果"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-使用three-bloompass在场景中添加泛光效果"}},[s._v("#")]),s._v(" 2.使用"),n("code",[s._v("THREE.BloomPass")]),s._v("在场景中添加泛光效果")]),s._v(" "),n("p",[s._v("当应用泛光效果时，场景中的明亮区域会变得更显著，且会渗入到较暗的区域，就像光源的边缘向外渐变扩散的效果。")]),s._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" bloomPass "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("THREE"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("BloomPass")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 参数说明见下图")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" bloomComposer "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("THREE"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("EffectComposer")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("renderer"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nbloomComposer"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("addPass")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("renderedScene"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nbloomComposer"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("addPass")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("bloomPass"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 将`THREE.ShaderPass`的输出作为组合器的最后一个通道，目的是将上一个通道的输出结果复制到屏幕上，")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 因为`BloomPass`通道不能直接将渲染结果输出到屏幕上")]),s._v("\nbloomComposer"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("addPass")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("shaderPass"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])]),n("p",[n("code",[s._v("THREE.BloomPass")]),s._v("的所有可选参数按顺序说明如下：\n"),n("img",{attrs:{src:a(374),alt:"THREE.BloomPass参数说明"}})]),s._v(" "),n("h4",{attrs:{id:"_3-使用three-dotscreenpass将场景作为点集输出"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-使用three-dotscreenpass将场景作为点集输出"}},[s._v("#")]),s._v(" 3.使用"),n("code",[s._v("THREE.DotScreenPass")]),s._v("将场景作为点集输出")]),s._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" dotPass "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("THREE"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("DotScreenPass")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 参数说明见下图，该通道也不能直接将渲染结果输出到屏幕上")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" dotComposer "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("THREE"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("EffectComposer")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("renderer"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\ndotComposer"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("addPass")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("renderedScene"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\ndotComposer"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("addPass")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("dotPass"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\ndotComposer"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("addPass")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("shaderPass"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])]),n("p",[n("code",[s._v("THREE.DotScreenPass")]),s._v("的所有可选参数按顺序说明如下：\n"),n("img",{attrs:{src:a(375),alt:"THREE.DotScreenPass参数说明"}})]),s._v(" "),n("h4",{attrs:{id:"_4-在同一个屏幕上显示多个渲染器的输出结果"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_4-在同一个屏幕上显示多个渲染器的输出结果"}},[s._v("#")]),s._v(" 4.在同一个屏幕上显示多个渲染器的输出结果")]),s._v(" "),n("p",[s._v("也就是利用"),n("code",[s._v("renderer.setViewport()")]),s._v("方法将整个画布划分成多个区域进行不同显示(视口)，该方法的作用是设置视图显示区域(即将视图显示在画布上哪个区域)，依次接受4个参数"),n("code",[s._v("x")]),s._v("、"),n("code",[s._v("y")]),s._v("、"),n("code",[s._v("width")]),s._v("、"),n("code",[s._v("height")]),s._v("，即视口的起始坐标及宽高。该方法也可以用于多场景、多摄像机和多"),n("code",[s._v("WebGLRenderer")]),s._v("的情况。")]),s._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[s._v("renderer"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("autoClear "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("false")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 关闭自动清理画布，避免其将画布上所有区域内容都清除")]),s._v("\nrenderer"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("clear")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 手动调用`clear()`方法，只在初次渲染时清除画布")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("render")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("requestAnimationFrame")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("render"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" delta "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" clock"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("getDelta")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 显示`FilmPass`通道渲染结果")]),s._v("\n  renderer"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("setViewport")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" halfWidth"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" halfHeight"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  filmComposer"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("render")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("delta"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 显示`BloomPass`通道渲染结果")]),s._v("\n  renderer"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("setViewport")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" halfHeight"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" halfWidth"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" halfHeight"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  bloomComposer"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("render")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("delta"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 显示`DotScreenPass`通道渲染结果")]),s._v("\n  renderer"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("setViewport")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("halfWidth"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" halfWidth"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" halfHeight"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  dotComposer"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("render")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("delta"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 显示原始渲染结果")]),s._v("\n  renderer"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("setViewport")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("halfWidth"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" halfHeight"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" halfWidth"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" halfHeight"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  composer"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("render")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("delta"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])]),n("h4",{attrs:{id:"_5-更多简单后期处理通道"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_5-更多简单后期处理通道"}},[s._v("#")]),s._v(" 5.更多简单后期处理通道")]),s._v(" "),n("p",[s._v("通道的使用方法与前面也都一样：")]),s._v(" "),n("ul",[n("li",[n("code",[s._v("THREE.OutlinePass")]),s._v("通道可以为场景中的模型勾勒轮廓；")]),s._v(" "),n("li",[n("code",[s._v("THREE.GlitchPass")]),s._v("通道可以模仿随机出现的电脉冲效果；")]),s._v(" "),n("li",[n("code",[s._v("THREE.UnrealBloom")]),s._v("通道同样实现泛光效果，但其效果看起来更接近"),n("code",[s._v("Unreal 3D")]),s._v("引擎中的泛光效果；")]),s._v(" "),n("li",[n("code",[s._v("THREE.HalftonePass")]),s._v("通道可以模仿传统印刷技术中的半色调效果；")])]),s._v(" "),n("h3",{attrs:{id:"_11-2-2-使用掩码的高级效果组合器"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_11-2-2-使用掩码的高级效果组合器"}},[s._v("#")]),s._v(" 11.2.2 使用掩码的高级效果组合器")]),s._v(" "),n("p",[s._v("前面示例中都是在整个屏幕上应用后期处理通道，实际Three.js也可以在特定的区域使用通道。")])])}),[],!1,null,null,null);t.default=e.exports}}]);